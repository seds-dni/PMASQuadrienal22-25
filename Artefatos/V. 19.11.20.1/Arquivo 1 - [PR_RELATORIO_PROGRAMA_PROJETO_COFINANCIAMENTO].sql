USE [Dbpmas_quadrienal_DESENV]
GO

/****** Object:  StoredProcedure [dbo].[PR_PROGRAMA_PROJETO_COFINANCIAMENTO]    Script Date: 20/11/2019 17:50:41 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[PR_RELATORIO_PROGRAMA_PROJETO_COFINANCIAMENTO]
	@ID_PROGRAMA_PROJETO  INT 
	, @EXERCICIO INT
AS  
  SELECT C.ID
		,C.ID_PROGRAMA_PROJETO
		,L.ID AS ID_UNIDADE
		,5 AS ID_TIPO_UNIDADE
		,'Centro Pop' AS TIPO_UNIDADE
		,L.NOME AS UNIDADE
		,S.ID AS ID_SERVICOS_RECURSOS_FINANCEIROS
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,S.NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_MUNICIPAL_ASSISTENCIA + 
					S1.VALOR_MUNICIPAL_FMDCA + 
					S1.VALOR_ESTADUAL_ASSISTENCIA + 
					S1.VALOR_ESTADUAL_FEDCA + 
					S1.VALOR_FEDERAL_ASSISTENCIA + 
					S1.VALOR_FEDERAL_FNDCA 
					--+ COALESCE(S.VALOR_ESTADUALIZADO,0)
					),0) AS PREVISAO_ORCAMENTARIA
		,isnull(C.NUMERO_USUARIOS, 0) AS NUMERO_USUARIOS
	 
  FROM TB_PROGRAMA_PROJETO_COFINANCIAMENTO C
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP S ON(S.ID = C.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP AND C.ID_PROGRAMA_PROJETO = @ID_PROGRAMA_PROJETO)
  LEFT JOIN  TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP S1
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP)

  INNER JOIN TB_CENTRO_POP L ON(L.ID = S.ID_CENTRO_POP)
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO)
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)

  UNION ALL

  SELECT C.ID
		,C.ID_PROGRAMA_PROJETO
		,L.ID AS ID_UNIDADE
		,4 AS ID_TIPO_UNIDADE
		,'CREAS' AS TIPO_UNIDADE
		,L.NOME AS UNIDADE
		,S.ID AS ID_SERVICOS_RECURSOS_FINANCEIROS
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,S.NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_MUNICIPAL_ASSISTENCIA + 
					S1.VALOR_MUNICIPAL_FMDCA + 
					S1.VALOR_ESTADUAL_ASSISTENCIA + 
					S1.VALOR_ESTADUAL_FEDCA + 
					S1.VALOR_FEDERAL_ASSISTENCIA + 
					S1.VALOR_FEDERAL_FNDCA 
					--+ COALESCE(S.VALOR_ESTADUALIZADO,0)
					),0) AS PREVISAO_ORCAMENTARIA
		,isnull(C.NUMERO_USUARIOS, 0) AS NUMERO_USUARIOS
	 
  FROM TB_PROGRAMA_PROJETO_COFINANCIAMENTO C
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS S ON(S.ID = C.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS AND C.ID_PROGRAMA_PROJETO = @ID_PROGRAMA_PROJETO)
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS S1 
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS AND S1.EXERCICIO = @EXERCICIO)

  INNER JOIN TB_CREAS L ON(L.ID = S.ID_CREAS)
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO)
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)

  UNION ALL

  SELECT C.ID
		,C.ID_PROGRAMA_PROJETO
		,L.ID AS ID_UNIDADE
		,3 AS ID_TIPO_UNIDADE
		,'CRAS' AS TIPO_UNIDADE
		,L.NOME AS UNIDADE
		,S.ID AS ID_SERVICOS_RECURSOS_FINANCEIROS
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,S.NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_MUNICIPAL_ASSISTENCIA + 
					S1.VALOR_MUNICIPAL_FMDCA + 
					S1.VALOR_ESTADUAL_ASSISTENCIA + 
					S1.VALOR_ESTADUAL_FEDCA + 
					S1.VALOR_FEDERAL_ASSISTENCIA + 
					S1.VALOR_FEDERAL_FNDCA 
					--+ COALESCE(S.VALOR_ESTADUALIZADO,0)
					),0) AS PREVISAO_ORCAMENTARIA
		,isnull(C.NUMERO_USUARIOS, 0) AS NUMERO_USUARIOS
	 
  FROM TB_PROGRAMA_PROJETO_COFINANCIAMENTO C
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS S ON(S.ID = C.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS AND C.ID_PROGRAMA_PROJETO = @ID_PROGRAMA_PROJETO)
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS S1 
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS AND S1.EXERCICIO = @EXERCICIO)
  INNER JOIN TB_CRAS L ON(L.ID = S.ID_CRAS)
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO)
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)

  UNION ALL

  SELECT C.ID
		,C.ID_PROGRAMA_PROJETO
		,L.ID AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede Direta' AS TIPO_UNIDADE
		,(L.RAZAO_SOCIAL + (CASE WHEN L.RAZAO_SOCIAL <> E.NOME THEN ' - ' + E.NOME ELSE '' END)) AS UNIDADE
		,S.ID AS ID_SERVICOS_RECURSOS_FINANCEIROS
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,S.NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_MUNICIPAL_ASSISTENCIA + 
					S1.VALOR_MUNICIPAL_FMDCA + 
					S1.VALOR_ESTADUAL_ASSISTENCIA + 
					S1.VALOR_ESTADUAL_FEDCA + 
					S1.VALOR_FEDERAL_ASSISTENCIA + 
					S1.VALOR_FEDERAL_FNDCA 
					--+ COALESCE(S.VALOR_ESTADUALIZADO,0)
					),0) AS PREVISAO_ORCAMENTARIA
		,isnull(C.NUMERO_USUARIOS, 0) AS NUMERO_USUARIOS
	 
  FROM TB_PROGRAMA_PROJETO_COFINANCIAMENTO C
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO S ON(S.ID = C.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO AND C.ID_PROGRAMA_PROJETO = @ID_PROGRAMA_PROJETO)
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO S1 
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO AND S1.EXERCICIO = @EXERCICIO)

  INNER JOIN TB_LOCAL_EXECUCAO_PUBLICO E ON(E.ID = S.ID_LOCAL_EXECUCAO_PUBLICO)
  INNER JOIN TB_UNIDADE_PUBLICA L ON(L.ID = E.ID_UNIDADE_PUBLICA)
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO)
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)

  UNION ALL

  SELECT C.ID
		,C.ID_PROGRAMA_PROJETO
		,L.ID AS ID_UNIDADE
		,2 AS ID_TIPO_UNIDADE
		,'Rede Indireta' AS TIPO_UNIDADE
		,(L.RAZAO_SOCIAL + (CASE WHEN L.RAZAO_SOCIAL <> E.NOME THEN ' - ' + E.NOME ELSE '' END)) AS UNIDADE
		,S.ID AS ID_SERVICOS_RECURSOS_FINANCEIROS
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,S.NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		, CASE WHEN S1.SERVICO_ESTADUALIZADO IS NULL THEN cast(0 as bit) ELSE S1.SERVICO_ESTADUALIZADO END
		,COALESCE((S1.VALOR_MUNICIPAL_ASSISTENCIA + 
					S1.VALOR_MUNICIPAL_FMDCA + 
					S1.VALOR_ESTADUAL_ASSISTENCIA + 
					S1.VALOR_ESTADUAL_FEDCA + 
					S1.VALOR_FEDERAL_ASSISTENCIA + 
					S1.VALOR_FEDERAL_FNDCA 
					--+ COALESCE(S.VALOR_ESTADUALIZADO,0)
					),0) AS PREVISAO_ORCAMENTARIA
		,isnull(C.NUMERO_USUARIOS, 0) AS NUMERO_USUARIOS
	 
  FROM TB_PROGRAMA_PROJETO_COFINANCIAMENTO C
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO S ON(S.ID = C.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO AND C.ID_PROGRAMA_PROJETO = @ID_PROGRAMA_PROJETO)
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO S1 
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO AND S1.EXERCICIO = @EXERCICIO)

  INNER JOIN TB_LOCAL_EXECUCAO_PRIVADO E ON(E.ID = S.ID_LOCAL_EXECUCAO_PRIVADO)
  INNER JOIN TB_UNIDADE_PRIVADA L ON(L.ID = E.ID_UNIDADE_PRIVADA)
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO)
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)



GO


