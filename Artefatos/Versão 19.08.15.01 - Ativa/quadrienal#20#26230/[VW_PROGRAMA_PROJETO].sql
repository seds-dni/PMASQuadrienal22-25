USE [Dbpmas_quadrienal_DESENV]
GO

/****** Object:  View [dbo].[VW_PROGRAMA_PROJETO]    Script Date: 11/09/2019 16:21:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER VIEW [dbo].[VW_PROGRAMA_PROJETO]
AS

  SELECT 
		P.ID,
		P.ID_PREFEITURA,
		P.NOME,
		CASE ((SELECT  COUNT(A.ID)  
				FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO A 
				INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO A1 
					ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO)
				INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO = A.ID)			             
				WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A1.VALOR_ESTADUAL_ASSISTENCIA > 0)
				+
				(SELECT  COUNT(A.ID)  
				FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO A 
				INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO A1 
					ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO)
				INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO = A.ID)			             
				WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A1.VALOR_ESTADUAL_ASSISTENCIA > 0)
				+
				(SELECT  COUNT(A.ID)  
				FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS A 
				INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS A1 
					ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS)
				INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS = A.ID)			             
				WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A1.VALOR_ESTADUAL_ASSISTENCIA > 0)
				+
				(SELECT  COUNT(A.ID)  
				FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS A 
				INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS A1 
					ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS)
				INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS = A.ID)			             
				WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A1.VALOR_ESTADUAL_ASSISTENCIA > 0)
				+
				(SELECT  COUNT(A.ID)  
				FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP A 
				INNER JOIN  TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP A1
					ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP)
				INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP = A.ID)			             
				WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A1.VALOR_ESTADUAL_ASSISTENCIA > 0)
			)   
		WHEN 0   
		THEN 'Não'   
		ELSE 'Sim'   
		END 'COFINANCIAMENTO'		
		,CASE ((SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID )--AND A.SERVICO_ESTADUALIZADO = 1)
					+
					(SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO = A.ID)			             
					LEFT JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO A1 
						ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO )
					WHERE  C.ID_PROGRAMA_PROJETO = P.ID AND A1.SERVICO_ESTADUALIZADO = 1)
					+
					(SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID )--AND A.SERVICO_ESTADUALIZADO = 1)
					+
					(SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID )-- AND A.SERVICO_ESTADUALIZADO = 1)
					+
					(SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID ) -- AND A.SERVICO_ESTADUALIZADO = 1)
				)
			WHEN 0
			THEN 'Não'
			ELSE 'Sim'   
			END 'ESTADUALIZADO'  
			,COUNT(C.ID) AS TOTAL_SERVICOS
			,(
			COALESCE((SELECT SUM(A1.VALOR_MUNICIPAL_ASSISTENCIA + 
						A1.VALOR_MUNICIPAL_FMDCA + 
						A1.VALOR_ESTADUAL_ASSISTENCIA + 
						A1.VALOR_ESTADUAL_FEDCA + 
						A1.VALOR_FEDERAL_ASSISTENCIA + 
						A1.VALOR_FEDERAL_FNDCA 
						--+ COALESCE(A.VALOR_ESTADUALIZADO,0)
						)
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO A 
					INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO A1 
						ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO)
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID
			),0) 
			+
			COALESCE((SELECT SUM(A1.VALOR_MUNICIPAL_ASSISTENCIA + 
						A1.VALOR_MUNICIPAL_FMDCA + 
						A1.VALOR_ESTADUAL_ASSISTENCIA + 
						A1.VALOR_ESTADUAL_FEDCA + 
						A1.VALOR_FEDERAL_ASSISTENCIA + 
						A1.VALOR_FEDERAL_FNDCA + 
						COALESCE(A1.VALOR_ESTADUALIZADO,0) + 
						A.VALOR_PRIVADO_EMPRESAS + 
						A.VALOR_PRIVADO_PESSOAS_FISICAS + 
						A.VALOR_PRIVADO_ORGANIZACOES + 
						A.VALOR_PRIVADO_PROPRIOS)
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO A 
					INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO A1 
						ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO)
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID
			),0) 
			+
			COALESCE((SELECT SUM(A1.VALOR_MUNICIPAL_ASSISTENCIA + 
						A1.VALOR_MUNICIPAL_FMDCA + 
						A1.VALOR_ESTADUAL_ASSISTENCIA + 
						A1.VALOR_ESTADUAL_FEDCA + 
						A1.VALOR_FEDERAL_ASSISTENCIA + 
						A1.VALOR_FEDERAL_FNDCA 
						--+ COALESCE(A.VALOR_ESTADUALIZADO,0)
						)
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS A 
					INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS A1 
						ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS)
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID
			),0) 
			+
			COALESCE((SELECT SUM(A1.VALOR_MUNICIPAL_ASSISTENCIA + 
						A1.VALOR_MUNICIPAL_FMDCA + 
						A1.VALOR_ESTADUAL_ASSISTENCIA + 
						A1.VALOR_ESTADUAL_FEDCA + 
						A1.VALOR_FEDERAL_ASSISTENCIA + 
						A1.VALOR_FEDERAL_FNDCA 
						--+ COALESCE(A.VALOR_ESTADUALIZADO,0)
						)
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS A 
					INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS A1 
						ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS)
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID
			),0) 
			+
			COALESCE((SELECT SUM(A1.VALOR_MUNICIPAL_ASSISTENCIA + 
						A1.VALOR_MUNICIPAL_FMDCA + 
						A1.VALOR_ESTADUAL_ASSISTENCIA + 
						A1.VALOR_ESTADUAL_FEDCA + 
						A1.VALOR_FEDERAL_ASSISTENCIA + 
						A1.VALOR_FEDERAL_FNDCA 
						--+ COALESCE(A.VALOR_ESTADUALIZADO,0)
						)
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP A 
					INNER JOIN  TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP A1
						ON(A.ID = A1.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP)
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID
			),0)
			) AS PREVISAO_ORCAMENTARIA,
			isnull(P.PROGRAMA_MUNICIPAL, 0) PROGRAMA_MUNICIPAL,
			isnull(P.PROGRAMA_ESTADUAL, 0) PROGRAMA_ESTADUAL,
			isnull(P.PROGRAMA_FEDERAL, 0) PROGRAMA_FEDERAL,
			CASE 
			WHEN(P.PROGRAMA_FEDERAL = 1) THEN 1
			WHEN(P.PROGRAMA_ESTADUAL = 1) THEN 2
			WHEN(P.PROGRAMA_MUNICIPAL = 1) THEN 3
			END AS TIPO_ABRANGENCIA,
			isnull(P.BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL, 0) BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL,
			case
			--when P.NOME like '%acessuas%' and isnull(P.VALOR_PREVISAO_ANUAL_ACESSUAS, 0.0) > 0.0 then 1
			--when P.NOME like '%solidário%' and (isnull(P.SP_SOLIDARIO_BUSCA_ATIVA_MES_INICIO, 0) > 0 or isnull(P.SP_SOLIDARIO_BUSCA_ATIVA_MES_TERMINO, 0) > 0 or isnull(P.SP_SOLIDARIO_BUSCA_ATIVA_ANO_INICIO, 0) > 0 or isnull(P.SP_SOLIDARIO_BUSCA_ATIVA_ANO_TERMINO, 0) > 0) then 1
			--when P.NOME like '%amigo do idoso%' and (isnull(P.META_PACTUADA, 0.0) > 0.0 or isnull(P.VALOR_DIA_IDOSO, 0.0) > 0.0 or isnull(P.VALOR_CONVIVENCIA_IDOSO, 0.0) > 0.0) then 1
			--when P.NOME like '%vivaleite%' and P.EXECUTA_ACAO_VIVALEITE = 1 then 1 
			--when P.NOME like '%bom prato%' and (isnull(P.NUMERO_REFEICOES_BOM_PRATO, 0.0) > 0.0 or isnull(P.NUMERO_BENEFICIARIOS_MENSAL, 0.0) > 0.0) then 1
			--When P.NOME like '%família paulista%' and P.ADERIU_FAMILIA_PAULISTA = 1 then 1
			--else 0
			--end
			when P.NOME like '%acessuas%' and P.ADERENCIA_ACESSUAS = 'True' then 1
			when P.NOME like '%São Paulo Amigo do Idoso%' and P.DT_ADESAO_PROGRAMA IS NOT NULL then 1
			when P.EXECUTA_PROGRAMA = 'True' then 1
			else 0 end ADERIU_BENEFICIO,
			CASE ((SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
					+
					(SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
					+
					(SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
					+
					(SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
					+
					(SELECT COUNT(A.ID)  
					FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP A 
					INNER JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP = A.ID)			             
					WHERE C.ID_PROGRAMA_PROJETO = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
				)
			WHEN 0
			THEN 'False'
			ELSE 'True'   
			END 'POSSUI_PROGRAMA_BENEFICIO',
			NULL AS ADERIU_BPC_NA_ESCOLA,
			case WHEN P.TRANSFERENCIA_RENDA_DIRETA = 'True'
			THEN 2 
			ELSE 1 END AS TIPO_PROGRAMA_TRANSFERENCIA,
			P.ATIVO
			
	FROM TB_PROGRAMA_PROJETO P
	LEFT JOIN TB_PROGRAMA_PROJETO_COFINANCIAMENTO C ON(C.ID_PROGRAMA_PROJETO = P.ID)	
	LEFT JOIN TB_PROGRAMA_PROJETO_PARCELAS P1 ON(P1.ID_PROGRAMA_PROJETO = P.ID)
	WHERE P.ATIVO = 1 --verificar regra
	GROUP BY P.ID, P.NOME,P.ID_PREFEITURA, P.PROGRAMA_MUNICIPAL, P.PROGRAMA_ESTADUAL, P.PROGRAMA_FEDERAL, P.BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL, P.TRANSFERENCIA_RENDA_DIRETA,
	P.VALOR_PREVISAO_ANUAL_ACESSUAS, P.SP_SOLIDARIO_BUSCA_ATIVA_VALOR_FEAS, P.META_PACTUADA, P1.VALOR_DIA_IDOSO, P1.VALOR_CONVIVENCIA_IDOSO,
	P.SP_SOLIDARIO_BUSCA_ATIVA_MES_INICIO, P.ADERENCIA_ACESSUAS, P.DT_ADESAO_PROGRAMA, P.EXECUTA_PROGRAMA, P.SP_SOLIDARIO_BUSCA_ATIVA_MES_TERMINO, P.SP_SOLIDARIO_BUSCA_ATIVA_ANO_INICIO, P.SP_SOLIDARIO_BUSCA_ATIVA_ANO_TERMINO, P.EXECUTA_ACAO_VIVALEITE, P.NUMERO_BENEFICIARIOS_MENSAL, P.NUMERO_REFEICOES_BOM_PRATO, P.ADERIU_FAMILIA_PAULISTA, P.ATIVO
	

	UNION ALL
	SELECT	P.ID,
		P.ID_PREFEITURA,
		P.NOME,
		--CASE WHEN (P.ID_TIPO_TRANSFERENCIA_RENDA = 2  AND P.ADERIU_BPC_NA_ESCOLA = 1) THEN ('Beneficio de Prestação Continuada - BPC na Escola') ELSE P.NOME END AS NOME,
		'Não' AS COFINANCIAMENTO,
		'Não' AS ESTADUALIZADO,
		Count(C.ID) AS TOTAL_SERVICOS,
		0.00 AS PREVISAO_ORCAMENTARIA,
		CASE WHEN (P.ID_TIPO_TRANSFERENCIA_RENDA = 8) THEN CAST(1 as BIT) ELSE CAST(0 AS BIT) END
		AS PROGRAMA_MUNICIPAL
	   ,CASE WHEN ( P.ID_TIPO_TRANSFERENCIA_RENDA = 5 OR P.ID_TIPO_TRANSFERENCIA_RENDA = 6 OR P.ID_TIPO_TRANSFERENCIA_RENDA = 9) THEN CAST(1 as BIT) ELSE CAST(0 AS BIT) END
		AS PROGRAMA_ESTADUAL
		,CASE WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 3 OR P.ID_TIPO_TRANSFERENCIA_RENDA = 4 THEN CAST(1 as BIT) ELSE CAST(0 AS BIT) END
		AS PROGRAMA_FEDERAL,
		CASE 
		WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 3 OR P.ID_TIPO_TRANSFERENCIA_RENDA = 4 THEN 1
		WHEN ( P.ID_TIPO_TRANSFERENCIA_RENDA = 5 OR P.ID_TIPO_TRANSFERENCIA_RENDA = 6 OR P.ID_TIPO_TRANSFERENCIA_RENDA = 9) THEN 2
		WHEN (P.ID_TIPO_TRANSFERENCIA_RENDA = 8)  THEN 3
		ELSE 4
		END AS TIPO_ABRANGENCIA
		,CAST(0 AS BIT) AS BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL
		,	CASE
		when P.EXECUTA_PROGRAMA = 'True' then 1
		WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 1 THEN CASE WHEN isnull(P.BPC_NUMERO_BENEFICIARIOS, 0) > 0 THEN 1 ELSE 0 END
		--WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 2 THEN CASE WHEN isnull(P.BPC_NUMERO_BENEFICIARIOS, 0) > 0
		WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 2 THEN CASE WHEN ISNULL(P.NUMERO_BENEFICIARIOS_BPC_NA_ESCOLA, 0) > 0 and ISNULL(P.ADERIU_BPC_NA_ESCOLA, 0) > 0 THEN 1 ELSE 0 END
		WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 3 THEN CASE WHEN isnull(PA.NUMERO_FAMILIAS_2017, 0) > 0 OR isnull(PA.NUMERO_FAMILIAS_2017, 0) > 0 OR isnull(PA.REPASSE_MENSAL_2017, 0.0) > 0.0 THEN 1 ELSE 0 END
		WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 4 THEN CASE
		WHEN  P.PETI_ADERIU_COFINANCIAMENTO_FEDERAL = 'True' then 1
		--isnull(P.BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL, 0) = 1 or isnull(P.PETI_BENEFICIARIO_TRANSFERENCIA_RENDA, 0) = 1 and ((isnull(P.PETI_NUMERO_BENEFICIARIO_BOLSA_FAMILIA, 0) + isnull(P.PETI_NUMERO_BENEFICIARIO_PETI_PURO_URBANO, 0) + isnull(P.PETI_NUMERO_BENEFICIARIO_PETI_PURO_RURAL, 0) + isnull(P.PETI_NUMERO_BENEFICIARIO_PROGRAMA_MUNICIPAL, 0)) > 0) THEN CAST(1 AS BIT)
		ELSE 0 END
		WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 5 THEN CASE WHEN isnull(P.ACAO_RENDA_META, 0) > 0 THEN 1 ELSE 0 END
		WHEN P.ID_TIPO_TRANSFERENCIA_RENDA = 6 THEN CASE WHEN isnull(P.ACAO_RENDA_META, 0) > 0 THEN 1 ELSE 0 END
		ELSE CASE WHEN isnull(P.MUNICIPAIS_NUMERO_BENEFICIARIOS, 0.0) > 0.0 OR isnull(P.RENDA_MUNICIPAIS_REPASSE, 0) > 0 THEN 1 ELSE 0 END
		END ADERIU_BENEFICIO,
						CASE (
								(SELECT COUNT(A.ID)  
								FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO A 
								INNER JOIN TB_SERVICO_RECURSO_FINANCEIRO_TRANSFERENCIA_RENDA C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO = A.ID)			             
								WHERE C.ID_TRANSFERENCIA_RENDA = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
								+
								(SELECT COUNT(A.ID)  
								FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO A 
								INNER JOIN TB_SERVICO_RECURSO_FINANCEIRO_TRANSFERENCIA_RENDA C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO = A.ID)			             
								WHERE C.ID_TRANSFERENCIA_RENDA = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
								+
								(SELECT COUNT(A.ID)  
								FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS A 
								INNER JOIN TB_SERVICO_RECURSO_FINANCEIRO_TRANSFERENCIA_RENDA C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS = A.ID)			             
								WHERE C.ID_TRANSFERENCIA_RENDA = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
								+
								(SELECT COUNT(A.ID)  
								FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS A 
								INNER JOIN TB_SERVICO_RECURSO_FINANCEIRO_TRANSFERENCIA_RENDA C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS = A.ID)			             
								WHERE C.ID_TRANSFERENCIA_RENDA = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
								+
								(SELECT COUNT(A.ID)  
								FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP A 
								INNER JOIN TB_SERVICO_RECURSO_FINANCEIRO_TRANSFERENCIA_RENDA C ON(C.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP = A.ID)			             
								WHERE C.ID_TRANSFERENCIA_RENDA = P.ID AND A.POSSUI_PROGRAMA_BENEFICIO = 1)
						  )
						WHEN 0
						THEN 'False'
						ELSE 'True'
						END 'POSSUI_PROGRAMA_BENEFICIO',
						P.ADERIU_BPC_NA_ESCOLA,
						2 AS TIPO_PROGRAMA_TRANSFERENCIA,
						P.ATIVO
						
	FROM TB_TRANSFERENCIA_RENDA P
	
	LEFT JOIN TB_SERVICO_RECURSO_FINANCEIRO_TRANSFERENCIA_RENDA C ON(C.ID_TRANSFERENCIA_RENDA = P.ID)	-- CORTAR A TABELA
	LEFT JOIN TB_TRANSFERENCIA_RENDAXPREVISAO_ANUAL PA ON (PA.ID_TRANSFERENCIA_RENDA = P.ID)
	where P.ID_TIPO_TRANSFERENCIA_RENDA <> 9
    GROUP BY P.ID, P.NOME,P.ID_PREFEITURA, P.ID_TIPO_TRANSFERENCIA_RENDA, BPC_NUMERO_BENEFICIARIOS,
	BOLSA_FAMILIA_REPASSE_MENSAL,PETI_PREVISAO_MENSAL,ACAO_RENDA_META,
	RENDA_MUNICIPAIS_REPASSE,BOLSA_FAMILIA_ESTIMATIVA_FAMILIAS, BOLSA_FAMILIA_NUMERO_FAMILIAS, 
	PETI_NUMERO_BENEFICIARIOS, MUNICIPAIS_NUMERO_BENEFICIARIOS, BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL, ID_FASE_PROGRAMA_TRANSFERENCIA_RENDA_SP_SOLIDARIO, SP_SOLIDARIO_REPASSE_ANUAL,
	PETI_BENEFICIARIO_TRANSFERENCIA_RENDA, PETI_NUMERO_BENEFICIARIO_BOLSA_FAMILIA, PETI_NUMERO_BENEFICIARIO_PETI_PURO_URBANO, PETI_NUMERO_BENEFICIARIO_PETI_PURO_RURAL,
	PETI_NUMERO_BENEFICIARIO_PROGRAMA_MUNICIPAL, P.EXECUTA_PROGRAMA,P.PETI_ADERIU_COFINANCIAMENTO_FEDERAL, P.ADERIU_BPC_NA_ESCOLA, P.NUMERO_BENEFICIARIOS_BPC_NA_ESCOLA, P.ATIVO, PA.NUMERO_FAMILIAS_2017, PA.REPASSE_MENSAL_2017
	
	UNION ALL
	SELECT	P.ID
		,PRE.ID AS ID_PREFEITURA
		,B.NOME		
		,'Não' AS COFINANCIAMENTO
		,'Não' AS ESTADUALIZADO
		,COUNT(C.ID) AS TOTAL_SERVICOS
		,COALESCE((P1.VALOR_FMAS + P1.VALOR_FEAS + P1.VALOR_FNAS + P1.VALOR_FUNDO_MUNICIPAL_SOLIDARIEDADE + P1.VALOR_FUNDO_ESTADUAL_SOLIDARIEDADE + P1.VALOR_ORCAMENTO_MUNICIPAL), 0) AS PREVISAO_ORCAMENTARIA
		,CAST(0 as BIT) AS PROGRAMA_MUNICIPAL
		,CAST(0 as BIT) AS PROGRAMA_ESTADUAL
		,CAST(0 as BIT) AS PROGRAMA_FEDERAL
		,4 AS TIPO_ABRANGENCIA
		,CAST(COALESCE(P.BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL,0)AS BIT) AS BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL
		,(CASE WHEN P.ID IS NOT NULL THEN 1 ELSE 0 END) AS ADERIU_BENEFICIO
		,'False' AS POSSUI_PROGRAMA_BENEFICIO
		,NULL AS ADERIU_BPC_NA_ESCOLA
		,3 AS TIPO_PROGRAMA_TRANSFERENCIA
		,'True' AS ATIVO
		
	FROM TB_TIPO_BENEFICIO_EVENTUAL B
	INNER JOIN TB_PREFEITURA PRE ON(PRE.ID IS NOT NULL)
	LEFT JOIN TB_PREFEITURA_BENEFICIO_EVENTUAL P ON(PRE.ID = P.ID_PREFEITURA AND B.ID = P.ID_TIPO_BENEFICIO_EVENTUAL)
	LEFT JOIN TB_PREFEITURA_BENEFICIO_EVENTUAL_SERVICOS C ON(C.ID_PREFEITURA_BENEFICIO_EVENTUAL = P.ID)
	LEFT JOIN TB_PREFEITURA_BENEFICIO_EVENTUAL_RECURSOS_FINANCEIROS P1 ON(P1.ID_PREFEITURA_BENEFICIO_EVENTUAL = P.ID)
	WHERE P.ID IS NOT NULL	
	GROUP BY B.ID,B.NOME, PRE.ID, P.ID, P.BENEFICIARIO_ATENDIDO_REDE_SOCIOASSISTENCIAL,
	P1.VALOR_FMAS , P1.VALOR_FEAS ,P1.VALOR_FNAS , P1.VALOR_FUNDO_MUNICIPAL_SOLIDARIEDADE , P1.VALOR_FUNDO_ESTADUAL_SOLIDARIEDADE, P1.VALOR_ORCAMENTO_MUNICIPAL
	







GO


