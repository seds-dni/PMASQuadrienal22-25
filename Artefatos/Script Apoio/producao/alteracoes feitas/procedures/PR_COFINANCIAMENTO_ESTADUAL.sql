USE [Dbpmas_quadrienal_PRODUCAO_OUTUBRO_2018]
GO

/****** Object:  StoredProcedure [dbo].[PR_COFINANCIAMENTO_ESTADUAL]    Script Date: 24/10/2018 17:25:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[PR_COFINANCIAMENTO_ESTADUAL]
	@ID_TIPO_PROTECAO  INT
	, @ID_PREFEITURA INT
	, @EXERCICIO INT
AS  
  IF @ID_TIPO_PROTECAO = 4
  SELECT * FROM (
  SELECT 0 AS ID		
		, 0 AS ID_UNIDADE
		, 1 AS ID_TIPO_UNIDADE
		, 'Rede direta' AS TIPO_UNIDADE
		, 'Programa São Paulo Solidário - Etapa de Busca Ativa' AS UNIDADE
		, 0 AS ID_USUARIO_TIPO_SERVICO
		, '' AS USUARIO
		, 0 AS ID_TIPO_SERVICO
		, ''  AS TIPO_SERVICO
		, CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		, '' AS PROTECAO_SOCIAL
		, 0 AS NUMERO_ATENDIDOS
		, '' AS ABRANGENCIA
		, CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		, COALESCE((T.SP_SOLIDARIO_BUSCA_ATIVA_VALOR_FEAS),0) AS PREVISAO_ORCAMENTARIA
		, 0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		, 1 AS ORDEM
		, CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PROGRAMA_PROJETO T
  WHERE T.ID_PREFEITURA = @ID_PREFEITURA 
  AND T.PROGRAMA_ESTADUAL = 1 
  AND T.NOME like '%São Paulo Solidário%' 
  AND T.ID_FASE_PROGRAMA_TRANSFERENCIA_RENDA_SP_SOLIDARIO >= 1
  AND T.SP_SOLIDARIO_BUSCA_ATIVA_ANO_TERMINO = 2017 
  AND (T.SP_SOLIDARIO_ANO_REPASSE_FEAS_BUSCA_ATIVA = 2017 
  OR (T.SP_SOLIDARIO_ANO_REPASSE_FEAS_BUSCA_ATIVA = 2017 AND T.SP_SOLIDARIO_VALOR_FEAS_RETIDO_FMAS_2014 = 1))
  AND T.SP_SOLIDARIO_BUSCA_ATIVA_VALOR_FEAS IS NOT NULL AND T.SP_SOLIDARIO_BUSCA_ATIVA_VALOR_FEAS > 0

  UNION ALL  

  SELECT 0 AS ID		
		,0 AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta'  AS TIPO_UNIDADE
		,'Programa São Paulo Solidário - Etapa de Agenda da Família' AS UNIDADE
		,0 AS ID_USUARIO_TIPO_SERVICO
		,'' AS USUARIO
		,0 AS ID_TIPO_SERVICO
		,''  AS TIPO_SERVICO
		,CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		,'' AS PROTECAO_SOCIAL
		,0 AS NUMERO_ATENDIDOS
		,'' AS ABRANGENCIA
		,CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		,COALESCE((T.SP_SOLIDARIO_AGENDA_FAMILIA_VALOR_FEAS),0) AS PREVISAO_ORCAMENTARIA
			,0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,2 AS ORDEM
			,CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PROGRAMA_PROJETO T
  WHERE T.ID_PREFEITURA = @ID_PREFEITURA 
  AND T.PROGRAMA_ESTADUAL = 1 
  AND T.NOME like '%São Paulo Solidário%' 
  AND T.ID_FASE_PROGRAMA_TRANSFERENCIA_RENDA_SP_SOLIDARIO = 3
  AND (T.SP_SOLIDARIO_ANO_REPASSE_FEAS_AGENDA_FAMILIA = 2017 
  OR (T.SP_SOLIDARIO_ANO_REPASSE_FEAS_AGENDA_FAMILIA = 2017 
  AND T.SP_SOLIDARIO_VALOR_FEAS_RETIDO_FMAS_2014_AGENDA_FAMILIA = 1))
  AND T.SP_SOLIDARIO_AGENDA_FAMILIA_VALOR_FEAS IS NOT NULL AND T.SP_SOLIDARIO_AGENDA_FAMILIA_VALOR_FEAS > 0

  UNION ALL  

  SELECT 0 AS ID		
		,0 AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta'  AS TIPO_UNIDADE
		,'Programa São Paulo Solidário - Etapa de Além da Renda' AS UNIDADE
		,0 AS ID_USUARIO_TIPO_SERVICO
		,'' AS USUARIO
		,0 AS ID_TIPO_SERVICO
		,''  AS TIPO_SERVICO
		,CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		,'' AS PROTECAO_SOCIAL
		,0 AS NUMERO_ATENDIDOS
		,'' AS ABRANGENCIA
		,CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		,COALESCE((T.SP_SOLIDARIO_ALEM_DA_RENDA_VALOR_FEAS),0) AS PREVISAO_ORCAMENTARIA
			,0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,3 AS ORDEM
			,CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PROGRAMA_PROJETO T
  WHERE T.ID_PREFEITURA = @ID_PREFEITURA AND T.PROGRAMA_ESTADUAL = 1 AND T.NOME like '%São Paulo Solidário%' AND T.ID_FASE_PROGRAMA_TRANSFERENCIA_RENDA_SP_SOLIDARIO = 3
  AND (T.SP_SOLIDARIO_ANO_REPASSE_FEAS_AGENDA_FAMILIA = 2017 OR (T.SP_SOLIDARIO_ANO_REPASSE_FEAS_AGENDA_FAMILIA = 2017 AND T.SP_SOLIDARIO_VALOR_FEAS_RETIDO_FMAS_2014_AGENDA_FAMILIA = 1))
  AND T.SP_SOLIDARIO_AGENDA_FAMILIA_VALOR_FEAS IS NOT NULL AND T.SP_SOLIDARIO_AGENDA_FAMILIA_VALOR_FEAS > 0

  UNION ALL  

  SELECT 0 AS ID		
		,0 AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta'  AS TIPO_UNIDADE
		,'Implantação de CRAS conforme Resolução SEDS-001, de 25/03/2017' AS UNIDADE
		,0 AS ID_USUARIO_TIPO_SERVICO
		,'' AS USUARIO
		,0 AS ID_TIPO_SERVICO
		,''  AS TIPO_SERVICO
		,CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		,'' AS PROTECAO_SOCIAL
		,0 AS NUMERO_ATENDIDOS
		,'' AS ABRANGENCIA
		,CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		,ISNULL(AP.VALOR_FEAS, 0.0) AS PREVISAO_ORCAMENTARIA
			,0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,4 AS ORDEM
			,CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PREFEITURA_ACAO_PLANEJAMENTO AP
  WHERE AP.ID_PREFEITURA = @ID_PREFEITURA AND AP.ID_ACAO_PLANEJAMENTO = 26 AND ISNULL(AP.VALOR_FEAS, 0.0) > 0.0

  UNION ALL

  SELECT 0 AS ID		
		,0 AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta' AS TIPO_UNIDADE
		,'Programa Família Paulista - 1° Parcela' AS UNIDADE
		,0 AS ID_USUARIO_TIPO_SERVICO
		,'' AS USUARIO
		,0 AS ID_TIPO_SERVICO
		,''  AS TIPO_SERVICO
		,CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		,'' AS PROTECAO_SOCIAL
		,0 AS NUMERO_ATENDIDOS
		,'' AS ABRANGENCIA
		,CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		,COALESCE((T.VALOR_PROGRAMADO_PROXIMO_ANO),0) AS PREVISAO_ORCAMENTARIA
			,0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,5 AS ORDEM
		,CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PROGRAMA_PROJETO T
  WHERE T.ID_PREFEITURA = @ID_PREFEITURA AND T.PROGRAMA_ESTADUAL = 1 AND T.NOME like '%família paulista%' AND ISNULL(T.VALOR_FEAS, 0.0) > 0.0

  ) T
  ORDER BY T.ORDEM, T.TIPO_UNIDADE,T.UNIDADE,T.TIPO_SERVICO, T.USUARIO
  ELSE IF @ID_TIPO_PROTECAO = 5
  BEGIN
     SELECT * FROM (
  SELECT 0 AS ID		
		,0 AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta' AS TIPO_UNIDADE
		,'Benefício Eventual - Auxílio Natalidade' AS UNIDADE
		,0 AS ID_USUARIO_TIPO_SERVICO
		,'' AS USUARIO
		,0 AS ID_TIPO_SERVICO
		,''  AS TIPO_SERVICO
		,CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		,'' AS PROTECAO_SOCIAL
		,0 AS NUMERO_ATENDIDOS
		,'' AS ABRANGENCIA
		,CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		,ISNULL((T.VALOR_FEAS),0.0) AS PREVISAO_ORCAMENTARIA
			,0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,1 AS ORDEM
			,CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PREFEITURA_BENEFICIO_EVENTUAL T
  WHERE T.ID_PREFEITURA = @ID_PREFEITURA AND T.ID_TIPO_BENEFICIO_EVENTUAL = 1 AND ISNULL((T.VALOR_FEAS),0.0) > 0

  UNION ALL  

  SELECT 0 AS ID		
		,0 AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta'  AS TIPO_UNIDADE
		,'Benefício Eventual - Auxílio Funeral' AS UNIDADE
		,0 AS ID_USUARIO_TIPO_SERVICO
		,'' AS USUARIO
		,0 AS ID_TIPO_SERVICO
		,''  AS TIPO_SERVICO
		,CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		,'' AS PROTECAO_SOCIAL
		,0 AS NUMERO_ATENDIDOS
		,'' AS ABRANGENCIA
		,CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		,ISNULL((T.VALOR_FEAS),0.0) AS PREVISAO_ORCAMENTARIA
			,0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,2 AS ORDEM
			,CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PREFEITURA_BENEFICIO_EVENTUAL T
  WHERE T.ID_PREFEITURA = @ID_PREFEITURA AND T.ID_TIPO_BENEFICIO_EVENTUAL = 2 AND ISNULL((T.VALOR_FEAS),0.0) > 0

  UNION ALL  

  SELECT 0 AS ID		
		,0 AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta'  AS TIPO_UNIDADE
		,'Benefício Eventual - Calamidades Públicas e Emergências' AS UNIDADE
		,0 AS ID_USUARIO_TIPO_SERVICO
		,'' AS USUARIO
		,0 AS ID_TIPO_SERVICO
		,''  AS TIPO_SERVICO
		,CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		,'' AS PROTECAO_SOCIAL
		,0 AS NUMERO_ATENDIDOS
		,'' AS ABRANGENCIA
		,CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		,ISNULL((T.VALOR_FEAS),0.0) AS PREVISAO_ORCAMENTARIA
			,0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,3 AS ORDEM
			,CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PREFEITURA_BENEFICIO_EVENTUAL T
  WHERE T.ID_PREFEITURA = @ID_PREFEITURA AND T.ID_TIPO_BENEFICIO_EVENTUAL = 3 AND ISNULL((T.VALOR_FEAS),0.0) > 0

  UNION ALL  

  SELECT 0 AS ID		
		,0 AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta' AS TIPO_UNIDADE
		,'Benefício Eventual - Vulnerabilidade Temporária' AS UNIDADE
		,0 AS ID_USUARIO_TIPO_SERVICO
		,'' AS USUARIO
		,0 AS ID_TIPO_SERVICO
		,''  AS TIPO_SERVICO
		,CAST(1 AS SMALLINT) AS ID_TIPO_PROTECAO
		,'' AS PROTECAO_SOCIAL
		,0 AS NUMERO_ATENDIDOS
		,'' AS ABRANGENCIA
		,CAST(0 as BIT) AS SERVICO_ESTADUALIZADO
		,ISNULL((T.VALOR_FEAS),0.0) AS PREVISAO_ORCAMENTARIA
	     ,0.0 AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,4 AS ORDEM
			,CAST(0 AS BIT) AS DESATIVADO
  FROM TB_PREFEITURA_BENEFICIO_EVENTUAL T
  WHERE T.ID_PREFEITURA = @ID_PREFEITURA AND T.ID_TIPO_BENEFICIO_EVENTUAL = 4 AND ISNULL((T.VALOR_FEAS),0.0) > 0
  ) T
  ORDER BY T.ORDEM, T.TIPO_UNIDADE,T.UNIDADE,T.TIPO_SERVICO, T.USUARIO
  END
  Else
  Begin
    SELECT * FROM (
  SELECT S.ID		
		,L.ID AS ID_UNIDADE
		,5 AS ID_TIPO_UNIDADE
		,'Centro Pop' AS TIPO_UNIDADE
		,L.NOME AS UNIDADE
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,S.NUMERO_ATENDIDOS_MENSAL AS NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA),0) AS PREVISAO_ORCAMENTARIA
		,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR), 0) AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,5 AS ORDEM
		,S.DESATIVADO
  FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP S
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP S1
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP AND S1.EXERCICIO = @EXERCICIO)
  INNER JOIN TB_UNIDADE_PUBLICA UP (NOLOCK) ON (UP.ID_PREFEITURA = @ID_PREFEITURA) --brunov
  INNER JOIN TB_CENTRO_POP L ON(L.ID = S.ID_CENTRO_POP AND L.ID_UNIDADE_PUBLICA = UP.ID) --brunov
  --INNER JOIN TB_CENTRO_POP L ON(L.ID = S.ID_CENTRO_POP AND L.ID_PREFEITURA = @ID_PREFEITURA) --original
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO AND T.ID_TIPO_PROTECAO = @ID_TIPO_PROTECAO )
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)
  WHERE S1.VALOR_ESTADUAL_ASSISTENCIA > 0 OR S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR > 0

  UNION ALL

  SELECT S.ID		
		,L.ID AS ID_UNIDADE
		,4 AS ID_TIPO_UNIDADE
		,'CREAS' AS TIPO_UNIDADE
		,L.NOME AS UNIDADE
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,COALESCE((S.NUMERO_ATENDIDOS_MENSAL), 0)  + COALESCE((S.NUMERO_ATENDIDOS_MENSAL_SERVICO), 0) AS NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA),0) AS PREVISAO_ORCAMENTARIA
		,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR), 0) AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,5 AS ORDEM
		,S.DESATIVADO
  FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS S
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS S1 
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS AND S1.EXERCICIO = @EXERCICIO)
  INNER JOIN TB_UNIDADE_PUBLICA UP (NOLOCK) ON (UP.ID_PREFEITURA = @ID_PREFEITURA) --brunov
  INNER JOIN TB_CREAS L ON(L.ID = S.ID_CREAS AND L.ID_UNIDADE_PUBLICA = UP.ID) --brunov
  --INNER JOIN TB_CREAS L ON(L.ID = S.ID_CREAS AND L.ID_PREFEITURA = @ID_PREFEITURA) --original
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO AND T.ID_TIPO_PROTECAO = @ID_TIPO_PROTECAO )
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)
  WHERE S1.VALOR_ESTADUAL_ASSISTENCIA > 0 OR S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR > 0

  UNION ALL

  SELECT S.ID		
		,L.ID AS ID_UNIDADE
		,3 AS ID_TIPO_UNIDADE
		,'CRAS' AS TIPO_UNIDADE
		,L.NOME AS UNIDADE
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,S.NUMERO_ATENDIDOS_MENSAL AS NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA),0) AS PREVISAO_ORCAMENTARIA
		,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR), 0) AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,5 AS ORDEM
		,S.DESATIVADO
  FROM TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS S
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS S1 
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS AND S1.EXERCICIO = @EXERCICIO)
  INNER JOIN TB_UNIDADE_PUBLICA UP (NOLOCK) ON (UP.ID_PREFEITURA = @ID_PREFEITURA) --brunov
  INNER JOIN TB_CRAS L ON(L.ID = S.ID_CRAS AND L.ID_UNIDADE_PUBLICA = UP.ID) --brunov
  --INNER JOIN TB_CRAS L ON(L.ID = S.ID_CRAS AND L.ID_PREFEITURA = @ID_PREFEITURA) --original
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO AND T.ID_TIPO_PROTECAO = @ID_TIPO_PROTECAO )
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)
  WHERE S1.VALOR_ESTADUAL_ASSISTENCIA > 0 OR S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR > 0

  UNION ALL

  SELECT S.ID		
		,L.ID AS ID_UNIDADE
		,1 AS ID_TIPO_UNIDADE
		,'Rede direta' AS TIPO_UNIDADE
		,(L.RAZAO_SOCIAL + (CASE WHEN L.RAZAO_SOCIAL <> E.NOME THEN ' - ' + E.NOME ELSE '' END)) AS UNIDADE
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,COALESCE((S.NUMERO_ATENDIDOS_MENSAL), 0)  + COALESCE((S.NUMERO_ATENDIDOS_MENSAL_SERVICO), 0) AS NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA),0) AS PREVISAO_ORCAMENTARIA
			,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR), 0) AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,5 AS ORDEM
		,S.DESATIVADO
  FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO S
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO S1 
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO AND S1.EXERCICIO = @EXERCICIO)
  INNER JOIN TB_LOCAL_EXECUCAO_PUBLICO E ON(E.ID = S.ID_LOCAL_EXECUCAO_PUBLICO)
  INNER JOIN TB_UNIDADE_PUBLICA L ON(L.ID = E.ID_UNIDADE_PUBLICA AND L.ID_PREFEITURA = @ID_PREFEITURA)
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO AND T.ID_TIPO_PROTECAO = @ID_TIPO_PROTECAO )
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)
   WHERE S1.VALOR_ESTADUAL_ASSISTENCIA > 0 OR S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR > 0

  UNION ALL

  SELECT S.ID		
		,L.ID AS ID_UNIDADE
		,2 AS ID_TIPO_UNIDADE
		,'Rede indireta' AS TIPO_UNIDADE
		,(L.RAZAO_SOCIAL + (CASE WHEN L.RAZAO_SOCIAL <> E.NOME THEN ' - ' + E.NOME ELSE '' END)) AS UNIDADE
		,S.ID_USUARIO_TIPO_SERVICO
		,U.NOME AS USUARIO
		,U.ID_TIPO_SERVICO
		,(T.NOME + (CASE WHEN DESCRICAO_NAO_TIPIFICADO IS NULL THEN '' ELSE (' - ' + DESCRICAO_NAO_TIPIFICADO)END))  AS TIPO_SERVICO
		,T.ID_TIPO_PROTECAO
		,P.NOME AS PROTECAO_SOCIAL
		,COALESCE((S.NUMERO_ATENDIDOS_MENSAL), 0)  + COALESCE((S.NUMERO_ATENDIDOS_MENSAL_SERVICO), 0) AS NUMERO_ATENDIDOS
		,A.ABREVIACAO AS ABRANGENCIA
		,cast(0 as bit) as SERVICO_ESTADUALIZADO
		,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA),0) AS PREVISAO_ORCAMENTARIA
			,COALESCE((S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR), 0) AS RECURSO_REPROGRAMADO_ANO_ANTERIOR
		,5 AS ORDEM
		,S.DESATIVADO
  FROM TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO S
  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO S1 
	ON(S.ID = S1.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO AND S1.EXERCICIO = @EXERCICIO)
  INNER JOIN TB_LOCAL_EXECUCAO_PRIVADO E ON(E.ID = S.ID_LOCAL_EXECUCAO_PRIVADO)
  INNER JOIN TB_UNIDADE_PRIVADA L ON(L.ID = E.ID_UNIDADE_PRIVADA AND L.ID_PREFEITURA = @ID_PREFEITURA)
  INNER JOIN TB_USUARIO_TIPO_SERVICO U ON (U.ID = S.ID_USUARIO_TIPO_SERVICO)
  INNER JOIN TB_TIPO_SERVICO T ON(T.ID = U.ID_TIPO_SERVICO AND T.ID_TIPO_PROTECAO = @ID_TIPO_PROTECAO )
  INNER JOIN TB_TIPO_PROTECAO P ON(P.ID = T.ID_TIPO_PROTECAO)
  INNER JOIN TB_ABRANGENCIA_SERVICO A ON(A.ID = S.ID_ABRANGENCIA_SERVICO)
  WHERE S1.VALOR_ESTADUAL_ASSISTENCIA > 0 OR S1.VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR > 0

   ) T
  ORDER BY T.ORDEM, T.TIPO_UNIDADE,T.UNIDADE,T.TIPO_SERVICO, T.USUARIO
  End

GO


