use DBPMAS_QUADRIENAL
GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

BEGIN TRY
    BEGIN TRANSACTION 
		--###############################################################
		--	CRIACAO TABELA:
		--		[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP]
		--
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP')
			BEGIN
				CREATE TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP](
					[ID] [int] IDENTITY(1,1) NOT NULL,
					[ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] [int] NOT NULL,
					[VALOR_MUNICIPAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMDCA] [money] NOT NULL,
					[VALOR_ESTADUAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_ESTADUAL_FEDCA] [money] NOT NULL,
					[VALOR_FEDERAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_FEDERAL_FNDCA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMI] [money] NULL,
					[VALOR_ESTADUAL_FEI] [money] NULL,
					[VALOR_FEDERAL_FNI] [money] NULL,
					[EXERCICIO] [int] NULL,
					[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] [money] NULL,
					[ID_SITUACAO] [int] NULL,
					[EXISTE_OUTRA_FONTE_FINANCIAMENTO] bit NULL,
					[DESBLOQUEADO] bit NULL,
				 CONSTRAINT [PK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP] PRIMARY KEY CLUSTERED 
				(
					[ID] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
				 CONSTRAINT [UQ_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_EXERCICIO] UNIQUE NONCLUSTERED 
				(
					[ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] ASC,
					[EXERCICIO] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
				) ON [PRIMARY]
			END
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP')		
			BEGIN
				ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP]  WITH CHECK ADD CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] FOREIGN KEY([ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP])
				REFERENCES [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] ([ID])
				ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP] CHECK CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP]
			END
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP] TO usupmasreporting
		

		--###############################################################
		-- INSERT 
		--			DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] 
		--			PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP]
		--###############################################################   

		IF NOT EXISTS (SELECT 1 FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP])
		BEGIN
			EXEC('INSERT INTO [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP]
					   ([ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP]
					   ,[VALOR_MUNICIPAL_ASSISTENCIA]
					   ,[VALOR_MUNICIPAL_FMDCA]
					   ,[VALOR_ESTADUAL_ASSISTENCIA]
					   ,[VALOR_ESTADUAL_FEDCA]
					   ,[VALOR_FEDERAL_ASSISTENCIA]
					   ,[VALOR_FEDERAL_FNDCA]
					   ,[VALOR_MUNICIPAL_FMI]
					   ,[VALOR_ESTADUAL_FEI]
					   ,[VALOR_FEDERAL_FNI]

					   ,[EXERCICIO]
					   ,[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR]
					   ,[ID_SITUACAO]
					   ,[EXISTE_OUTRA_FONTE_FINANCIAMENTO]
					   ,[DESBLOQUEADO]
			) SELECT 
				  [ID]
				, [VALOR_MUNICIPAL_ASSISTENCIA] 
				, [VALOR_MUNICIPAL_FMDCA] 
				, [VALOR_ESTADUAL_ASSISTENCIA] 
				, [VALOR_ESTADUAL_FEDCA] 
				, [VALOR_FEDERAL_ASSISTENCIA] 
				, [VALOR_FEDERAL_FNDCA] 
				, [VALOR_MUNICIPAL_FMI] 
				, [VALOR_ESTADUAL_FEI] 
				, [VALOR_FEDERAL_FNI] 

				, 2018 as [EXERCICIO] 
				, [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
				, 1 as [ID_SITUACAO]
				, cast(0 as bit) as [EXISTE_OUTRA_FONTE_FINANCIAMENTO]
				, cast(0 as bit) as [DESBLOQUEADO] 

			FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP]')
		END
		--###############################################################
		-- DROP COLUMN DA MUDANÇA:
		--				DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] 
		--				PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP]
		--###############################################################

		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP')
			BEGIN
				IF EXISTS (SELECT 1 FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP]) -- se existir valores copiados
				BEGIN
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_MUNICIPAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_MUNICIPAL_ASSISTENCIA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_MUNICIPAL_FMDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_MUNICIPAL_FMDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_ESTADUAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_ESTADUAL_FEDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_ESTADUAL_FEDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_FEDERAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_FEDERAL_ASSISTENCIA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_FEDERAL_FNDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_FEDERAL_FNDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_MUNICIPAL_FMI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_MUNICIPAL_FMI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_ESTADUAL_FEI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_ESTADUAL_FEI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_FEDERAL_FNI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_FEDERAL_FNI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'OUTRA_FONTE_FINANCIAMENTO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [OUTRA_FONTE_FINANCIAMENTO] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP', 'VALOR_ESTADUALIZADO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP] DROP COLUMN [VALOR_ESTADUALIZADO] 
					END
				END
			END
		--###############################################################
		--###############################################################

		--'1 - SUCESSO CRIACAO [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP]'
		PRINT '1 - OK'

		--###############################################################
		--	CRIACAO TABELA:
		--		[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS]
		--
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS')
			BEGIN
				CREATE TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS](
					[ID] [int] IDENTITY(1,1) NOT NULL,
					[ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS] [int] NOT NULL,
					[VALOR_MUNICIPAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMDCA] [money] NOT NULL,
					[VALOR_ESTADUAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_ESTADUAL_FEDCA] [money] NOT NULL,
					[VALOR_FEDERAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_FEDERAL_FNDCA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMI] [money] NULL,
					[VALOR_ESTADUAL_FEI] [money] NULL,
					[VALOR_FEDERAL_FNI] [money] NULL,
					[EXERCICIO] [int] NULL,
					[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] [money] NULL,
					[ID_SITUACAO] [int] NULL,
					[EXISTE_OUTRA_FONTE_FINANCIAMENTO] bit NULL ,
					[DESBLOQUEADO]  bit NULL,
				 CONSTRAINT [PK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS] PRIMARY KEY CLUSTERED 
				(
					[ID] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
				 CONSTRAINT [UQ_SERVICOS_RECURSOS_FINANCEIROS_CRAS_EXERCICIO] UNIQUE NONCLUSTERED 
				(
					[ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS] ASC,
					[EXERCICIO] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
				) ON [PRIMARY]
			END
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS')		
			BEGIN
				ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS] WITH CHECK ADD CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] FOREIGN KEY([ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS]) REFERENCES [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] ([ID])
				ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS] CHECK CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS]
			END

			
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS] TO usupmasreporting

		--###############################################################
		-- INSERT 
		--		DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] 
		--		PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS]
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS])
			BEGIN
				EXEC('INSERT INTO [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS]
						   ([ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS]
						   ,[VALOR_MUNICIPAL_ASSISTENCIA]
						   ,[VALOR_MUNICIPAL_FMDCA]
						   ,[VALOR_ESTADUAL_ASSISTENCIA]
						   ,[VALOR_ESTADUAL_FEDCA]
						   ,[VALOR_FEDERAL_ASSISTENCIA]
						   ,[VALOR_FEDERAL_FNDCA]
						   ,[VALOR_MUNICIPAL_FMI]
						   ,[VALOR_ESTADUAL_FEI]
						   ,[VALOR_FEDERAL_FNI]

						   ,[EXERCICIO]
						   ,[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR]
						   ,[ID_SITUACAO]
						   ,[EXISTE_OUTRA_FONTE_FINANCIAMENTO]
						   ,[DESBLOQUEADO]
				) SELECT 
					  [ID]
					, [VALOR_MUNICIPAL_ASSISTENCIA] 
					, [VALOR_MUNICIPAL_FMDCA] 
					, [VALOR_ESTADUAL_ASSISTENCIA] 
					, [VALOR_ESTADUAL_FEDCA] 
					, [VALOR_FEDERAL_ASSISTENCIA] 
					, [VALOR_FEDERAL_FNDCA] 
					, [VALOR_MUNICIPAL_FMI] 
					, [VALOR_ESTADUAL_FEI] 
					, [VALOR_FEDERAL_FNI] 

					, 2018 as [EXERCICIO] 
					, [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
					, 1 as [ID_SITUACAO]
					, cast(0 as bit) as [EXISTE_OUTRA_FONTE_FINANCIAMENTO]
					, cast(0 as bit) as [DESBLOQUEADO] 
				FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS]')
			END

		--###############################################################
		-- DROP COLUMN DA MUDANÇA:
		--		DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] 
		--		PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS]
		--###############################################################
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS')
			BEGIN
				IF EXISTS (SELECT 1 FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS]) -- se existir valores copiados
				BEGIN
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_MUNICIPAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_MUNICIPAL_ASSISTENCIA] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_MUNICIPAL_FMDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_MUNICIPAL_FMDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_ESTADUAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_ESTADUAL_FEDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_ESTADUAL_FEDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_FEDERAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_FEDERAL_ASSISTENCIA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_FEDERAL_FNDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_FEDERAL_FNDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_MUNICIPAL_FMI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_MUNICIPAL_FMI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_ESTADUAL_FEI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_ESTADUAL_FEI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_FEDERAL_FNI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_FEDERAL_FNI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'OUTRA_FONTE_FINANCIAMENTO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [OUTRA_FONTE_FINANCIAMENTO] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS', 'VALOR_ESTADUALIZADO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS] DROP COLUMN [VALOR_ESTADUALIZADO] 
					END
				END
			END
		
		--###############################################################
		--###############################################################

		--'2 - SUCESSO CRIACAO [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS]'
		PRINT '2 - OK'

		--###############################################################
		--	CRIACAO TABELA:
		--		[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS]
		--
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS')
			BEGIN
				CREATE TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS](
					[ID] [int] IDENTITY(1,1) NOT NULL,
					[ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS] [int] NOT NULL,
					[VALOR_MUNICIPAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMDCA] [money] NOT NULL,
					[VALOR_ESTADUAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_ESTADUAL_FEDCA] [money] NOT NULL,
					[VALOR_FEDERAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_FEDERAL_FNDCA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMI] [money] NULL,
					[VALOR_ESTADUAL_FEI] [money] NULL,
					[VALOR_FEDERAL_FNI] [money] NULL,
					[EXERCICIO] [int] NULL,
					[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] [money] NULL,
					[ID_SITUACAO] [int] NULL,
					[EXISTE_OUTRA_FONTE_FINANCIAMENTO] bit NULL ,
					[DESBLOQUEADO] bit NULL,
				 CONSTRAINT [PK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS] PRIMARY KEY CLUSTERED 
				(
					[ID] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
				 CONSTRAINT [UQ_SERVICOS_RECURSOS_FINANCEIROS_CREAS_EXERCICIO] UNIQUE NONCLUSTERED 
				(
					[ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS] ASC,
					[EXERCICIO] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
				) ON [PRIMARY]
			END
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS')
			BEGIN
				IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS')		
				BEGIN
					ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS] WITH CHECK ADD CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] FOREIGN KEY([ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS]) 
					REFERENCES [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] ([ID])
					ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS] CHECK CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS]
				END
			END
		
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS] TO usupmasreporting



		--###############################################################
		-- INSERT 
		--				DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] 
		--				PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS]
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS)
			BEGIN
				EXEC('INSERT INTO [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS]
						   ([ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS]
						   ,[VALOR_MUNICIPAL_ASSISTENCIA]
						   ,[VALOR_MUNICIPAL_FMDCA]
						   ,[VALOR_ESTADUAL_ASSISTENCIA]
						   ,[VALOR_ESTADUAL_FEDCA]
						   ,[VALOR_FEDERAL_ASSISTENCIA]
						   ,[VALOR_FEDERAL_FNDCA]
						   ,[VALOR_MUNICIPAL_FMI]
						   ,[VALOR_ESTADUAL_FEI]
						   ,[VALOR_FEDERAL_FNI]

						   ,[EXERCICIO]
						   ,[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR]
						   ,[ID_SITUACAO]
						   ,[EXISTE_OUTRA_FONTE_FINANCIAMENTO]
						   ,[DESBLOQUEADO]
				) SELECT 
					  [ID]
					, [VALOR_MUNICIPAL_ASSISTENCIA] 
					, [VALOR_MUNICIPAL_FMDCA] 
					, [VALOR_ESTADUAL_ASSISTENCIA] 
					, [VALOR_ESTADUAL_FEDCA] 
					, [VALOR_FEDERAL_ASSISTENCIA] 
					, [VALOR_FEDERAL_FNDCA] 
					, [VALOR_MUNICIPAL_FMI] 
					, [VALOR_ESTADUAL_FEI] 
					, [VALOR_FEDERAL_FNI] 

					, 2018 as [EXERCICIO] 
					, [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
					, 1 as [ID_SITUACAO] 
					, cast(0 as bit) as [EXISTE_OUTRA_FONTE_FINANCIAMENTO]
					, cast(0 as bit) as [DESBLOQUEADO] 

				FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS]')
			END
		

		--###############################################################
		-- DROP COLUMN DA MUDANÇA:
		--				DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] 
		--				PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS]
		--###############################################################
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS')
			BEGIN
				IF EXISTS (SELECT 1 FROM TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS)
				BEGIN
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_MUNICIPAL_ASSISTENCIA') IS NOT NULL)
						BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_MUNICIPAL_ASSISTENCIA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_MUNICIPAL_FMDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_MUNICIPAL_FMDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_ESTADUAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_ESTADUAL_FEDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_ESTADUAL_FEDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_FEDERAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_FEDERAL_ASSISTENCIA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_FEDERAL_FNDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_FEDERAL_FNDCA] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_MUNICIPAL_FMI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_MUNICIPAL_FMI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_ESTADUAL_FEI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_ESTADUAL_FEI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_FEDERAL_FNI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_FEDERAL_FNI] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'OUTRA_FONTE_FINANCIAMENTO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [OUTRA_FONTE_FINANCIAMENTO] 
					END

					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS', 'VALOR_ESTADUALIZADO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS] DROP COLUMN [VALOR_ESTADUALIZADO] 
					END
				END	
			END	
		
		--###############################################################
		--###############################################################

		-- '3 - SUCESSO CRIACAO [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS]'
		PRINT '3 - OK'
		


		--###############################################################
		--	CRIACAO TABELA:
		--		[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO]
		--
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO')
			BEGIN
				CREATE TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO](
					[ID] [int] IDENTITY(1,1) NOT NULL,
					[ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] [int] NOT NULL,
					[VALOR_MUNICIPAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMDCA] [money] NOT NULL,
					[VALOR_ESTADUAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_ESTADUAL_FEDCA] [money] NOT NULL,
					[VALOR_FEDERAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_FEDERAL_FNDCA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMI] [money] NULL,
					[VALOR_ESTADUAL_FEI] [money] NULL,
					[VALOR_FEDERAL_FNI] [money] NULL,
					[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] [money] NULL,
	
					[SERVICO_ESTADUALIZADO] bit  NULL ,
					[VALOR_ESTADUALIZADO] [money] NULL,

					[CONVENIO_ESTADUALIZADO] bit NULL ,
					[VALOR_RECURSO_EXCLUSIVO_SERVICO] [money] NULL,

					[EXERCICIO] [int] NULL,
					[ID_SITUACAO] [int] NULL,

					[EXISTE_OUTRA_FONTE_FINANCIAMENTO] bit NULL, 

					[ID_MOTIVO_ESTADUALIZADO] int NULL ,
					[DESBLOQUEADO] bit NULL, 
				 CONSTRAINT [PK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO] PRIMARY KEY CLUSTERED 
				(
					[ID] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],

				 CONSTRAINT [UQ_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_EXERCICIO] UNIQUE NONCLUSTERED 
				(
					[ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] ASC,
					[EXERCICIO] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
				) ON [PRIMARY]
			END
		
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO')
			BEGIN
				IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO_TB_MOTIVO_ESTADUALIZADO')		
				BEGIN
					ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO] WITH CHECK ADD CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO_TB_MOTIVO_ESTADUALIZADO] FOREIGN KEY([ID_MOTIVO_ESTADUALIZADO]) REFERENCES [dbo].[TB_MOTIVO_ESTADUALIZADO] ([ID])
					ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO] CHECK CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO_TB_MOTIVO_ESTADUALIZADO]
				END
			END
					
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO] TO usupmasreporting

		--###############################################################
		-- INSERT 
		--			DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] 
		--			PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO]
		--###############################################################
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO')
			BEGIN
				IF NOT EXISTS (SELECT 1 FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO])
				BEGIN
					EXEC('INSERT INTO [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO]
							   ([ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO]
							   ,[VALOR_MUNICIPAL_ASSISTENCIA]
							   ,[VALOR_MUNICIPAL_FMDCA]
							   ,[VALOR_ESTADUAL_ASSISTENCIA]
							   ,[VALOR_ESTADUAL_FEDCA]
							   ,[VALOR_FEDERAL_ASSISTENCIA]
							   ,[VALOR_FEDERAL_FNDCA]
							   ,[VALOR_MUNICIPAL_FMI]
							   ,[VALOR_ESTADUAL_FEI]
							   ,[VALOR_FEDERAL_FNI]
							   ,[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR]

							   ,[SERVICO_ESTADUALIZADO]
							   ,[VALOR_ESTADUALIZADO]

							   ,[CONVENIO_ESTADUALIZADO]
							   ,[VALOR_RECURSO_EXCLUSIVO_SERVICO]

							   ,[EXERCICIO]
							   ,[ID_SITUACAO]
		   
							   ,[EXISTE_OUTRA_FONTE_FINANCIAMENTO]
							   ,[ID_MOTIVO_ESTADUALIZADO]
							   ,[DESBLOQUEADO]
					) SELECT 
						  [ID]
						, [VALOR_MUNICIPAL_ASSISTENCIA] 
						, [VALOR_MUNICIPAL_FMDCA] 
						, [VALOR_ESTADUAL_ASSISTENCIA] 
						, [VALOR_ESTADUAL_FEDCA] 
						, [VALOR_FEDERAL_ASSISTENCIA] 
						, [VALOR_FEDERAL_FNDCA] 
						, [VALOR_MUNICIPAL_FMI] 
						, [VALOR_ESTADUAL_FEI] 
						, [VALOR_FEDERAL_FNI] 
						, [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 

						, [SERVICO_ESTADUALIZADO]  -- mantido e transferido para o fundo
						, [VALOR_ESTADUALIZADO]

						, [CONVENIO_ESTADUALIZADO]
						, [VALOR_RECURSO_EXCLUSIVO_SERVICO] 

						, 2018 as [EXERCICIO] 
						, 1 as [ID_SITUACAO]

						, cast(0 as bit) as [EXISTE_OUTRA_FONTE_FINANCIAMENTO]
						, [ID_MOTIVO_ESTADUALIZADO]
						, cast(0 as bit) as [DESBLOQUEADO] 

					FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO]')
				END
			END
		

		--###############################################################
		-- DROP COLUMN DA MUDANÇA:
		--			DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] 
		--			PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO]
		--###############################################################
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO')
			BEGIN
				IF EXISTS (SELECT 1 FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO])
				BEGIN
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_MUNICIPAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_MUNICIPAL_ASSISTENCIA] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_MUNICIPAL_FMDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_MUNICIPAL_FMDCA] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_ESTADUAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_ESTADUAL_FEDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_ESTADUAL_FEDCA] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_FEDERAL_ASSISTENCIA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_FEDERAL_ASSISTENCIA] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_FEDERAL_FNDCA') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_FEDERAL_FNDCA] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_MUNICIPAL_FMI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_MUNICIPAL_FMI] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_ESTADUAL_FEI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_ESTADUAL_FEI] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_FEDERAL_FNI') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_FEDERAL_FNI] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'OUTRA_FONTE_FINANCIAMENTO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [OUTRA_FONTE_FINANCIAMENTO] 
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_ESTADUALIZADO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_ESTADUALIZADO] --somente no privado
					END
					IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO', 'VALOR_RECURSO_EXCLUSIVO_SERVICO') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO] DROP COLUMN [VALOR_RECURSO_EXCLUSIVO_SERVICO] --somente no privado
					END
					--####################################################################################################
					--#	DROP COLUMN: SERVICO_ESTADUALIZADO (REMOCAO DEFAULT CONSTRAINT)
					--####################################################################################################
					DECLARE @ConstraintNamex1 nvarchar(200)
						SELECT @ConstraintNamex1 = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO') 
																				   AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																				   WHERE NAME = N'SERVICO_ESTADUALIZADO' 
																				   AND object_id = OBJECT_ID(N'TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO'))
						IF @ConstraintNamex1 IS NOT NULL
							BEGIN
								EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO DROP CONSTRAINT ' + @ConstraintNamex1)
							END
						IF EXISTS (SELECT * FROM syscolumns WHERE id=object_id('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO') AND name = 'SERVICO_ESTADUALIZADO')
							BEGIN
								EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO DROP COLUMN SERVICO_ESTADUALIZADO')
							END
			
					--####################################################################################################
					--#	DROP COLUMN: CONVENIO_ESTADUALIZADO (REMOCAO DEFAULT CONSTRAINT)
					--####################################################################################################
					DECLARE @ConstraintName1 nvarchar(200)
						SELECT @ConstraintName1 = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO') 
																					AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																					WHERE NAME = N'CONVENIO_ESTADUALIZADO' 
																					AND object_id = OBJECT_ID(N'TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO'))
							IF @ConstraintName1 IS NOT NULL
								BEGIN
									EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO DROP CONSTRAINT ' + @ConstraintName1)
								END
							IF EXISTS (SELECT * FROM syscolumns WHERE id=object_id('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO') AND name = 'CONVENIO_ESTADUALIZADO')
								BEGIN
									EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO DROP COLUMN CONVENIO_ESTADUALIZADO')
								END
					--###############################################################

				END
			END
		

		-- '4 - SUCESSO CRIACAO [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO]'
		PRINT '4 - OK'
		
		--###############################################################
		--	CRIACAO TABELA:
		--		[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO]
		--
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO')
			BEGIN
				CREATE TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO](
					[ID] [int] IDENTITY(1,1) NOT NULL,
					[ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] [int] NOT NULL,
					[VALOR_MUNICIPAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMDCA] [money] NOT NULL,
					[VALOR_ESTADUAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_ESTADUAL_FEDCA] [money] NOT NULL,
					[VALOR_FEDERAL_ASSISTENCIA] [money] NOT NULL,
					[VALOR_FEDERAL_FNDCA] [money] NOT NULL,
					[VALOR_MUNICIPAL_FMI] [money] NULL,
					[VALOR_ESTADUAL_FEI] [money] NULL,
					[VALOR_FEDERAL_FNI] [money] NULL,

					[EXERCICIO] [int] NULL,
					[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] [money] NULL,
					[ID_SITUACAO] [int] NULL,
					[EXISTE_OUTRA_FONTE_FINANCIAMENTO] bit NULL ,
					[DESBLOQUEADO] bit NULL, 

				 CONSTRAINT [PK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO] PRIMARY KEY CLUSTERED 
				(
					[ID] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
				 CONSTRAINT [UQ_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_EXERCICIO] UNIQUE NONCLUSTERED 
				(
					[ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] ASC,
					[EXERCICIO] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
				) ON [PRIMARY]
			END
		
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO')
			BEGIN
				IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO')		
				BEGIN
					ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO]  WITH CHECK ADD  CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] 
					FOREIGN KEY([ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO])
					REFERENCES [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] ([ID])
					ALTER TABLE [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO] CHECK CONSTRAINT [FK_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO]
				END
			END
					
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO] TO usupmasreporting

		--###############################################################
		-- INSERT 
		--			DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] 
		--			PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO]
		--###############################################################
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO')
			BEGIN
				IF NOT EXISTS (SELECT 1 FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO])
				BEGIN
					EXEC('INSERT INTO [dbo].[TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO]
							   ([ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO]
							   ,[VALOR_MUNICIPAL_ASSISTENCIA]
							   ,[VALOR_MUNICIPAL_FMDCA]
							   ,[VALOR_ESTADUAL_ASSISTENCIA]
							   ,[VALOR_ESTADUAL_FEDCA]
							   ,[VALOR_FEDERAL_ASSISTENCIA]
							   ,[VALOR_FEDERAL_FNDCA]
							   ,[VALOR_MUNICIPAL_FMI]
							   ,[VALOR_ESTADUAL_FEI]
							   ,[VALOR_FEDERAL_FNI]

							   ,[EXERCICIO]
							   ,[VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR]
							   ,[ID_SITUACAO]
							   ,[EXISTE_OUTRA_FONTE_FINANCIAMENTO]
							   ,[DESBLOQUEADO]
					) SELECT 
						  [ID]
						, [VALOR_MUNICIPAL_ASSISTENCIA] 
						, [VALOR_MUNICIPAL_FMDCA] 
						, [VALOR_ESTADUAL_ASSISTENCIA] 
						, [VALOR_ESTADUAL_FEDCA] 
						, [VALOR_FEDERAL_ASSISTENCIA] 
						, [VALOR_FEDERAL_FNDCA] 
						, [VALOR_MUNICIPAL_FMI] 
						, [VALOR_ESTADUAL_FEI] 
						, [VALOR_FEDERAL_FNI] 

						, 2018 as [EXERCICIO] 
						, [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
						, 1 as [ID_SITUACAO] 
						, cast(0 as bit) as [EXISTE_OUTRA_FONTE_FINANCIAMENTO]
						, cast(0 as bit) as [DESBLOQUEADO] 
					FROM [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO]')
				END
			END
		

		--###############################################################
		-- DROP COLUMN DA MUDANÇA:
		--				DE:    [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] 
		--				PARA:  [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO]
		--###############################################################
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO')
			BEGIN
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_MUNICIPAL_ASSISTENCIA') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_MUNICIPAL_ASSISTENCIA] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_MUNICIPAL_FMDCA') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_MUNICIPAL_FMDCA] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_ESTADUAL_ASSISTENCIA') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_ESTADUAL_FEDCA') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_ESTADUAL_FEDCA] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_FEDERAL_ASSISTENCIA') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_FEDERAL_ASSISTENCIA] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_FEDERAL_FNDCA') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_FEDERAL_FNDCA] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_MUNICIPAL_FMI') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_MUNICIPAL_FMI] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_ESTADUAL_FEI') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_ESTADUAL_FEI] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_FEDERAL_FNI') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_FEDERAL_FNI] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [VALOR_ESTADUAL_ASSISTENCIA_ANO_ANTERIOR] 
				END
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO', 'OUTRA_FONTE_FINANCIAMENTO') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO] DROP COLUMN [OUTRA_FONTE_FINANCIAMENTO] 
				END
			END


		--####################################################################################################
		--#	DROP COLUMN: CENTRO POP 
		--#			SERVICO_ESTADUALIZADO
		--####################################################################################################
			DECLARE @ConstraintNamex nvarchar(200)
				SELECT @ConstraintNamex = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP') AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = N'SERVICO_ESTADUALIZADO' AND object_id = OBJECT_ID(N'TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP'))
					IF @ConstraintNamex IS NOT NULL
						BEGIN
							EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP DROP CONSTRAINT ' + @ConstraintNamex)
						END
					IF EXISTS (SELECT * FROM syscolumns WHERE id=object_id('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP') AND name = 'SERVICO_ESTADUALIZADO')
						BEGIN
							EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP DROP COLUMN SERVICO_ESTADUALIZADO')
						END
					
		--####################################################################################################
		--#	DROP COLUMN: CRAS
		--#			SERVICO_ESTADUALIZADO
		--####################################################################################################
			DECLARE @ConstraintName3 nvarchar(200)
				SELECT @ConstraintName3 = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS') AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = N'SERVICO_ESTADUALIZADO' AND object_id = OBJECT_ID(N'TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS'))
					IF @ConstraintName3 IS NOT NULL
						BEGIN
							EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS DROP CONSTRAINT ' + @ConstraintName3)
						END
					IF EXISTS (SELECT * FROM syscolumns WHERE id=object_id('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS') AND name = 'SERVICO_ESTADUALIZADO')
						BEGIN
							EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS DROP COLUMN SERVICO_ESTADUALIZADO')
						END
					

		--####################################################################################################
		--#	DROP COLUMN: CREAS
		--#			SERVICO_ESTADUALIZADO
		--####################################################################################################
			DECLARE @ConstraintName4 nvarchar(200)
				SELECT @ConstraintName4 = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS') AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = N'SERVICO_ESTADUALIZADO' AND object_id = OBJECT_ID(N'TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS'))
					IF @ConstraintName4 IS NOT NULL
						BEGIN
							EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS DROP CONSTRAINT ' + @ConstraintName4)
						END
					IF EXISTS (SELECT * FROM syscolumns WHERE id=object_id('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS') AND name = 'SERVICO_ESTADUALIZADO')
						BEGIN
							EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS DROP COLUMN SERVICO_ESTADUALIZADO')
						END
					

		--####################################################################################################
		--#	DROP COLUMN: PUBLICO
		--#			SERVICO_ESTADUALIZADO
		--####################################################################################################
			DECLARE @ConstraintName5 nvarchar(200)
				SELECT @ConstraintName5 = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO') AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = N'SERVICO_ESTADUALIZADO' AND object_id = OBJECT_ID(N'TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO'))
					IF @ConstraintName5 IS NOT NULL
						BEGIN
							EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO DROP CONSTRAINT ' + @ConstraintName5)
						END
					IF EXISTS (SELECT * FROM syscolumns WHERE id=object_id('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO') AND name = 'SERVICO_ESTADUALIZADO')
						BEGIN
							EXEC('ALTER TABLE TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO DROP COLUMN SERVICO_ESTADUALIZADO')
						END
					

		-- '5 - SUCESSO CRIACAO [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO]'
		PRINT '5 - OK'
		

		--**************************************************************************************	
		--
		--				MUDANCA DO "FONTE DE RECURSOS" :
		--					DE: CENTRO_POP/CRAS/CREAS/PUBLICO/PRIVADO
		--					PARA: FUNDO_CENTRO_POP/FUNDO_CRAS...
		--
		--**************************************************************************************
		--####################################################################################		
		--####################################################################################		
		--####################################################################################		
		--#
		--#		FONTES PUBLICO
		--#				DE: [ID_SERVICO_RECURSO_FINANCEIRO_PUBLICO]
		--#				PARA: [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PUBLICO]
		--####################################################################################
			--add column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PUBLICO') IS NULL)
			BEGIN
				ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS] 
				ADD [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PUBLICO] [int] NULL
			END
			
		--####################################################################################
			--update ids 
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_PUBLICO') IS NOT NULL)
				BEGIN
					EXEC('UPDATE 
							t2
						SET 
							t2.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PUBLICO = t1.ID
						FROM  TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO t1
							  INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS t2 
								ON(t2.ID_SERVICO_RECURSO_FINANCEIRO_PUBLICO = t1.ID_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO) 
						WHERE EXERCICIO = 2018 ')
				END
			
		--####################################################################################
			--drop constraint
			IF EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO')		
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS] 
					DROP CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO
				END
			
			--drop column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_PUBLICO') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS] 
					DROP COLUMN ID_SERVICO_RECURSO_FINANCEIRO_PUBLICO
				END
			
			--add contraint
			IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO')		
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS] 
					ADD CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO 
					FOREIGN KEY (ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PUBLICO) REFERENCES TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO(ID)
				END
			
		--####################################################################################
			--configuracao
			EXEC('UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO 
					SET [EXISTE_OUTRA_FONTE_FINANCIAMENTO] = 1
					WHERE ID in (
									SELECT SFFP.ID from TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO SFFP
									INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_PUBLICO_FONTE_RECURSOS SFFR 
									ON SFFP.ID = SFFR.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PUBLICO
								)')
			
		-- '6 - FUNDOS_PUBLICO +- 63 ROWS ATUALIZADAS ULTIMA VERSAO DE PROD'
		PRINT '6 - OK'

		--####################################################################################		
		--####################################################################################		
		--####################################################################################		
		--#
		--#		FONTES CRAS
		--#				DE: [ID_SERVICO_RECURSO_FINANCEIRO_CRAS]
		--#				PARA: [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CRAS]
		--####################################################################################
			--add column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CRAS') IS NULL)
			BEGIN
				ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS] 
				ADD [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CRAS] [int] NULL
			END
			
		--####################################################################################
			--update ids (necessário ser antes de dropar)
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_CRAS') IS NOT NULL)
				BEGIN
					EXEC('UPDATE 
						t2
					SET 
						t2.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CRAS = t1.ID
					FROM 
						TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS t1
						INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS t2 ON(t2.ID_SERVICO_RECURSO_FINANCEIRO_CRAS = t1.ID_SERVICOS_RECURSOS_FINANCEIROS_CRAS)
						WHERE EXERCICIO = 2018')
				END
			
		--####################################################################################		
			--constraints
			IF EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS')		
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS] 
					DROP CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS
				END
			

			--drop column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_CRAS') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS] 
					DROP COLUMN ID_SERVICO_RECURSO_FINANCEIRO_CRAS
				END
			

			--add contraint
			IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS')		
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS] 
					ADD CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS 
					FOREIGN KEY (ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CRAS) REFERENCES TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS(ID)
				END
			
		--####################################################################################		
			--configuracao
			EXEC('
				UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS SET [EXISTE_OUTRA_FONTE_FINANCIAMENTO] = 1
				WHERE ID in (
								SELECT SFFP.ID FROM TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS SFFP
								INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CRAS_FONTE_RECURSOS SFFR 
								ON SFFP.ID = SFFR.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CRAS
							)')
				
		-- '7 - FUNDOS_CRAS +- 70 ROWS ATUALIZADAS ULTIMA VERSAO DE PROD'
		PRINT '7 - OK'

		--####################################################################################		
		--####################################################################################		
		--####################################################################################		
		--#
		--#		FONTES CREAS
		--#				DE: [ID_SERVICO_RECURSO_FINANCEIRO_CREAS]
		--#				PARA: [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CREAS]
		--####################################################################################
			--add column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CREAS') IS NULL)
			BEGIN
				ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS] 
				ADD [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CREAS] [int] NULL
			END
			
		--####################################################################################
			--update ids (necessário ser antes de dropar)
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_CREAS') IS NOT NULL)
				BEGIN
					EXEC('UPDATE 
						t2
					SET 
						t2.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CREAS = t1.ID
					FROM 
							TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS t1
							INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS t2
								ON(t2.ID_SERVICO_RECURSO_FINANCEIRO_CREAS = t1.ID_SERVICOS_RECURSOS_FINANCEIROS_CREAS)
					WHERE EXERCICIO = 2018 ')
				END
			
		--####################################################################################		
			--constraints
			IF EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS')		
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS] 
					DROP CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS
				END
			

			--drop column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_CREAS') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS] 
					DROP COLUMN ID_SERVICO_RECURSO_FINANCEIRO_CREAS
				END
			

			--add contraint
			IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS')		
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS] 
					ADD CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS 
					FOREIGN KEY (ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CREAS) REFERENCES TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS(ID)
				END
			

		--####################################################################################		
			--configuracao
				EXEC('UPDATE 
						TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS 
						SET [EXISTE_OUTRA_FONTE_FINANCIAMENTO] = 1
						WHERE ID in (	
									SELECT SFFP.ID from TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS SFFP
									INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CREAS_FONTE_RECURSOS SFFR 
									ON SFFP.ID = SFFR.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CREAS
							)')
				

		-- '8 - FUNDOS_CREAS +- 15 ROWS ATUALIZADAS ULTIMA VERSAO DE PROD'
		PRINT '8 - OK'

		--####################################################################################		
		--####################################################################################		
		--####################################################################################		
		--#
		--#		FONTES CENTRO_POP
		--#				DE: [ID_SERVICO_RECURSO_FINANCEIRO_CENTRO_POP]
		--#				PARA: [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CENTRO_POP]
		--####################################################################################
		--####################################################################################
			--add column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CENTRO_POP') IS NULL)
			BEGIN
				ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS] 
				ADD [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CENTRO_POP] [int] NULL
			END
			
		--####################################################################################
			--update ids (necessário ser antes de dropar)
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_CENTRO_POP') IS NOT NULL)
				BEGIN
					EXEC('UPDATE 
								t2
							SET 
								t2.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CENTRO_POP = t1.ID
							FROM 
									TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP t1
									INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS t2
										ON(t2.ID_SERVICO_RECURSO_FINANCEIRO_CENTRO_POP = t1.ID_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP)
							WHERE EXERCICIO = 2018')
				END
			
		--####################################################################################		
			--constraints
			IF EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP')		
				BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS] 
						DROP CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP
				END
			
			--drop column
				IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_CENTRO_POP') IS NOT NULL)
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS] 
						DROP COLUMN ID_SERVICO_RECURSO_FINANCEIRO_CENTRO_POP
					END
			
			--add contraint
				IF NOT EXISTS (SELECT 1 
						   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
						   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP')		
					BEGIN
						ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS] 
						ADD CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP
						FOREIGN KEY (ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CENTRO_POP) REFERENCES TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP(ID)
					END
			


		--####################################################################################		
			--configuracao
				 EXEC('UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP
						SET [EXISTE_OUTRA_FONTE_FINANCIAMENTO] = 1
						WHERE ID in (
									SELECT SFFP.ID from TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP SFFP
									INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_CENTRO_POP_FONTE_RECURSOS SFFR 
									ON SFFP.ID = SFFR.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_CENTRO_POP
							)')
				

		-- '9 - FUNDOS_CENTRO_POP 1 ROWS ATUALIZADAS ULTIMA VERSAO DE PROD'
		PRINT '9 - OK'
		--####################################################################################		
		--####################################################################################		
		--####################################################################################		
		--#
		--#		FONTES PRIVADO
		--#				DE: [ID_SERVICO_RECURSO_FINANCEIRO_PRIVADO]
		--#				PARA: [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PRIVADO]
		--####################################################################################
		--####################################################################################
			--add column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PRIVADO') IS NULL)
			BEGIN
				ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS] 
				ADD [ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PRIVADO] [int] NULL
			END
			
		--####################################################################################
			--update ids (necessário ser antes de dropar)
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_PRIVADO') IS NOT NULL)
				BEGIN
					EXEC('UPDATE 
								t2
							SET 
								t2.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PRIVADO = t1.ID
							FROM 
									TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO t1
									INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS t2
										ON(t2.ID_SERVICO_RECURSO_FINANCEIRO_PRIVADO = t1.ID_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO)
							WHERE EXERCICIO = 2018')
				END
			
		--####################################################################################		

		--constraints
			IF EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO')		
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS] 
					DROP CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO
				END
			

			--drop column
			IF(COL_LENGTH('TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS', 'ID_SERVICO_RECURSO_FINANCEIRO_PRIVADO') IS NOT NULL)
				BEGIN
				ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS] 
					DROP COLUMN ID_SERVICO_RECURSO_FINANCEIRO_PRIVADO
				END
			

			--add contraint
			IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO')		
				BEGIN
					ALTER TABLE [TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS] 
						ADD CONSTRAINT FK_TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS_TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO
					FOREIGN KEY (ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PRIVADO) REFERENCES TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO(ID)
				END
			

		--####################################################################################		
			--configuracao
				EXEC('UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO
						SET [EXISTE_OUTRA_FONTE_FINANCIAMENTO] = 1
						WHERE ID in (
									SELECT SFFP.ID from TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO SFFP
									INNER JOIN TB_SERVICOS_RECURSOS_FINANCEIROS_PRIVADO_FONTE_RECURSOS SFFR 
									ON SFFP.ID = SFFR.ID_SERVICO_RECURSO_FINANCEIRO_FUNDO_PRIVADO
							)')
				
		--####################################################################################		
		-- '10 - FUNDOS_PRIVADO 413 ROWS ATUALIZADAS ULTIMA VERSAO DE PROD'
		PRINT '10 - OK'

		--###############################################################
		--
		-- UPDATE "ID_SITUACAO" (Para especificar bloqueios)
		--
		--###############################################################
		--###############################################################
			UPDATE [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP]  SET [ID_SITUACAO] = 1
			
			UPDATE [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS]   SET [ID_SITUACAO] = 1
			
			UPDATE [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS] SET [ID_SITUACAO] = 1
			
			UPDATE [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO] SET [ID_SITUACAO] = 1
			
			UPDATE [TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO] SET [ID_SITUACAO] = 1
			
		-- '11 - SITUACOES DEFINIDAS PARA OS FUNDOS'
		PRINT '11 - OK'
		--####################################################################################		
		--#	UPDATE "BLOQUEIO E DESBLOQUEIO DE FUNDOS"
		-- 2018 bloqueado
		-- 2019 desbloqueado
		--obs.: até segundao ordem
		--####################################################################################		

		UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CENTRO_POP SET [DESBLOQUEADO] = CASE WHEN EXERCICIO = 2018 THEN  0 ELSE 1 END
		UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CRAS SET [DESBLOQUEADO] = CASE WHEN EXERCICIO = 2018 THEN  0 ELSE 1 END
		UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_CREAS SET [DESBLOQUEADO] = CASE WHEN EXERCICIO = 2018 THEN  0 ELSE 1 END
		UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PRIVADO SET [DESBLOQUEADO] = CASE WHEN EXERCICIO = 2018 THEN  0 ELSE 1 END
		UPDATE TB_SERVICOS_RECURSOS_FINANCEIROS_FUNDOS_PUBLICO SET [DESBLOQUEADO] = CASE WHEN EXERCICIO = 2018 THEN  0 ELSE 1 END
		-- '12 - BLOQUEIO E DESBLOQUEIO DE FUNDOS'
		PRINT '12 - OK'


		IF NOT EXISTS (select 1 from [TB_RECURSO] where ID = 167)
			BEGIN
				INSERT INTO [dbo].[TB_RECURSO]
						   ([ID],[NOME],[PAGINA],[ID_PAI],[ORDEM])
					 VALUES
						   (167,'Desbloqueio Atualizações Anuais' ,'FDesbloqueioAnual.aspx' ,1 ,15)
			END
		


		IF NOT EXISTS ( SELECT 1 FROM [TB_RECURSOxPERFIL] WHERE [ID_RECURSO] = 165 AND [ID_PERFIL] = 64 )
			BEGIN
				INSERT INTO [dbo].[TB_RECURSOxPERFIL] ([ID_RECURSO] ,[ID_PERFIL]) VALUES (165,64)
			END
		
		IF NOT EXISTS ( SELECT 1 FROM [TB_RECURSOxPERFIL] WHERE [ID_RECURSO] = 165 AND [ID_PERFIL] = 65 )
			BEGIN
				INSERT INTO [dbo].[TB_RECURSOxPERFIL] ([ID_RECURSO] ,[ID_PERFIL]) VALUES (165,65)
			END
		
		IF NOT EXISTS ( SELECT 1 FROM [TB_RECURSOxPERFIL] WHERE [ID_RECURSO] = 165 AND [ID_PERFIL] = 66 )
			BEGIN
				INSERT INTO [dbo].[TB_RECURSOxPERFIL] ([ID_RECURSO] ,[ID_PERFIL]) VALUES (165,66)
			END
		
		IF NOT EXISTS ( SELECT 1 FROM [TB_RECURSOxPERFIL] WHERE [ID_RECURSO] = 165 AND [ID_PERFIL] = 67 )
			BEGIN
				INSERT INTO [dbo].[TB_RECURSOxPERFIL] ([ID_RECURSO] ,[ID_PERFIL]) VALUES (165,67)
			END
		
		IF NOT EXISTS ( SELECT 1 FROM [TB_RECURSOxPERFIL] WHERE [ID_RECURSO] = 165 AND [ID_PERFIL] = 68 )
			BEGIN
				INSERT INTO [dbo].[TB_RECURSOxPERFIL] ([ID_RECURSO] ,[ID_PERFIL]) VALUES (165,68)
			END
		
		IF NOT EXISTS ( SELECT 1 FROM [TB_RECURSOxPERFIL] WHERE [ID_RECURSO] = 165 AND [ID_PERFIL] = 70 )
			BEGIN
				INSERT INTO [dbo].[TB_RECURSOxPERFIL] ([ID_RECURSO] ,[ID_PERFIL]) VALUES (165,70)
			END
		
		IF NOT EXISTS ( SELECT 1 FROM [TB_RECURSOxPERFIL] WHERE [ID_RECURSO] = 165 AND [ID_PERFIL] = 71 )
			BEGIN
				INSERT INTO [dbo].[TB_RECURSOxPERFIL] ([ID_RECURSO] ,[ID_PERFIL]) VALUES (165,71)
			END
		

		IF NOT EXISTS ( SELECT 1 FROM [TB_RECURSOxPERFIL] WHERE [ID_RECURSO] = 167 AND [ID_PERFIL] = 68 )
			BEGIN
				INSERT INTO [dbo].[TB_RECURSOxPERFIL] ([ID_RECURSO] ,[ID_PERFIL]) VALUES (167,68)
			END
		

		-- '13 - NOVAS PERMISSOES CEDIDAS'
		PRINT '13 - OK'


		--#########################################
		--Adequação da base para:
		--		Equipes especificas 2019
		--#########################################
		IF(COL_LENGTH('TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA', 'EXERCICIO') IS NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA ADD EXERCICIO int null
				EXEC('UPDATE TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA SET EXERCICIO = 2018')
			END
		
		IF(COL_LENGTH('TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA', 'DESBLOQUEADO') IS NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA ADD DESBLOQUEADO bit null
				EXEC('UPDATE TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA SET DESBLOQUEADO = 0')
			END
		

		-- '14 - EQUIPES ESPECIFICAS PARA 2018'
		PRINT '14 - OK'
		
		-------------------------------------- 05-11-2018
 
		SET QUOTED_IDENTIFIER ON
		
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE')
			BEGIN
				CREATE TABLE [dbo].[TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE](
					[ID] [int] IDENTITY(1,1) NOT NULL,
					[ID_ORGAO_GESTOR] [int] NOT NULL,
					[INTENCAO_ACAO_EQUIPE_BASICA] [bit] NULL,
					[INTENCAO_ACAO_EQUIPE_ESPECIAL] [bit] NULL,
					[INTENCAO_ACAO_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL] [bit] NULL,
					[INTENCAO_ACAO_EQUIPE_GESTAO_BENEFICIOS] [bit] NULL,
					[INTENCAO_ACAO_EQUIPE_GESTAO_CAD_UNICO] [bit] NULL,
					[INTENCAO_ACAO_EQUIPE_GESTAO_FINANCEIRA] [bit] NULL,
					[INTENCAO_ACAO_EQUIPE_GESTAO_SUAS] [bit] NULL,
					[INTENCAO_ACAO_EQUIPE_REGULACAO_SUAS] [bit] NULL,
					[INTENCAO_ACAO_EQUIPE_REDE_DIRETA] [bit] NULL,
					[INTENCAO_ACAO_OUTRA_EQUIPE] [bit] NULL,
					[INTENCAO_ACAO_ORGAO_GESTOR] [bit] NULL, -- FAZER EDMX
					[EXERCICIO] int null,
					[DESBLOQUEIO] bit null,
				 CONSTRAINT [PK_TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE] PRIMARY KEY CLUSTERED 
				(
					[ID] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
				) ON [PRIMARY] 
			END
		--tratamento
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE')
			BEGIN
				IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
				WHERE CONSTRAINT_NAME = N'FK_TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE_TB_ORGAO_GESTOR')		
					BEGIN
						ALTER TABLE [dbo].[TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE]  WITH CHECK ADD  
						CONSTRAINT [FK_TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE_TB_ORGAO_GESTOR] 
						FOREIGN KEY([ID_ORGAO_GESTOR])
						REFERENCES [dbo].[TB_ORGAO_GESTOR] ([ID])
					END
			END
		
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE')
			BEGIN
				IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
				WHERE CONSTRAINT_NAME = N'FK_TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE_TB_ORGAO_GESTOR')		
					BEGIN
						ALTER TABLE [dbo].[TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE] CHECK 
						CONSTRAINT [FK_TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE_TB_ORGAO_GESTOR]
					END
			END
		
							
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE] TO usupmasreporting

		
		--###############################################################
		-- INSERT 
		-- DE: TB_ORGAO_GESTOR
		-- PARA: TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE
		--###############################################################

		IF NOT EXISTS (SELECT 1 FROM TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE)
		BEGIN
			EXEC('INSERT INTO [TB_ORGAO_GESTOR_INTENCAO_ESTRUTURACAO_EQUIPE] (  
					  ID_ORGAO_GESTOR
					, INTENCAO_ACAO_EQUIPE_BASICA
					, INTENCAO_ACAO_EQUIPE_ESPECIAL
					, INTENCAO_ACAO_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL
					, INTENCAO_ACAO_EQUIPE_GESTAO_BENEFICIOS
					, INTENCAO_ACAO_EQUIPE_GESTAO_CAD_UNICO
					, INTENCAO_ACAO_EQUIPE_GESTAO_FINANCEIRA
					, INTENCAO_ACAO_EQUIPE_GESTAO_SUAS
					, INTENCAO_ACAO_EQUIPE_REGULACAO_SUAS
					, INTENCAO_ACAO_EQUIPE_REDE_DIRETA
					, INTENCAO_ACAO_OUTRA_EQUIPE
					, INTENCAO_ACAO_ORGAO_GESTOR
					, EXERCICIO
					, DESBLOQUEIO)
				SELECT		  
					  ID 
					, INTENCAO_ACAO_EQUIPE_BASICA
					, INTENCAO_ACAO_EQUIPE_ESPECIAL
					, INTENCAO_ACAO_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL
					, INTENCAO_ACAO_EQUIPE_GESTAO_BENEFICIOS
					, INTENCAO_ACAO_EQUIPE_GESTAO_CAD_UNICO
					, INTENCAO_ACAO_EQUIPE_GESTAO_FINANCEIRA
					, INTENCAO_ACAO_EQUIPE_GESTAO_SUAS
					, INTENCAO_ACAO_EQUIPE_REGULACAO_SUAS
					, INTENCAO_ACAO_EQUIPE_REDE_DIRETA
					, INTENCAO_ACAO_OUTRA_EQUIPE
					, INTENCAO_ACAO_ORGAO_GESTOR
					, 2018 as EXERCICIO
					, 0 as DESBLOQUEIO 
					FROM TB_ORGAO_GESTOR')
		END
		

		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_BASICA') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_BASICA
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_ESPECIAL') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_ESPECIAL
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_GESTAO_BENEFICIOS') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_GESTAO_BENEFICIOS
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_GESTAO_CAD_UNICO') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_GESTAO_CAD_UNICO
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_GESTAO_FINANCEIRA') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_GESTAO_FINANCEIRA
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_GESTAO_SUAS') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_GESTAO_SUAS
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_REGULACAO_SUAS') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_REGULACAO_SUAS
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_EQUIPE_REDE_DIRETA') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_EQUIPE_REDE_DIRETA
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_OUTRA_EQUIPE') IS NOT NULL)
			BEGIN
				ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_OUTRA_EQUIPE
			END
		IF(COL_LENGTH('TB_ORGAO_GESTOR', 'INTENCAO_ACAO_ORGAO_GESTOR') IS NOT NULL)
			BEGIN
			DECLARE @ConstraintName2 nvarchar(200)
					SELECT @ConstraintName2 = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = N'INTENCAO_ACAO_ORGAO_GESTOR' AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
						IF @ConstraintName2 IS NOT NULL
							BEGIN
								EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName2)
							END
						IF EXISTS (SELECT * FROM syscolumns WHERE id=object_id('TB_ORGAO_GESTOR') AND name = 'INTENCAO_ACAO_ORGAO_GESTOR')
							BEGIN
								EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN INTENCAO_ACAO_ORGAO_GESTOR')
							END
		
			END
			
	
		/****** Object:  Table [dbo].[TB_ORGAO_GESTOR]    Script Date: 05/11/2018 09:42:04 ******/
		SET ANSI_NULLS ON
		

		SET QUOTED_IDENTIFIER ON
		
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS')
			BEGIN
				CREATE TABLE [dbo].[TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS](
					[ID] [int] IDENTITY(1,1) NOT NULL,
					[ID_ORGAO_GESTOR] [int] NOT NULL,
					[TOTAL_SUPERIOR_SERVICO_SOCIAL] [int] NOT NULL,
					[TOTAL_SUPERIOR_PSICOLOGIA] [int] NOT NULL,
					[TOTAL_SUPERIOR_PEDAGOGIA] [int] NOT NULL,
					[TOTAL_SUPERIOR_SOCIOLOGIA] [int] NOT NULL,
					[TOTAL_SUPERIOR_DIREITO] [int] NOT NULL,
					[TOTAL_SUPERIOR_ADMINISTRACAO] [int] NOT NULL,
					[TOTAL_SUPERIOR_ANTROPOLOGIA] [int] NOT NULL,
					[TOTAL_SUPERIOR_CONTABILIDADE] [int] NOT NULL,
					[TOTAL_SUPERIOR_ECONOMIA] [int] NOT NULL,
					[TOTAL_SUPERIOR_TERAPIA_OCUPACIONAL] [int] NOT NULL,
					[TOTAL_SUPERIOR_ECONOMIA_DOMESTICA] [int] NOT NULL,
					[TOTAL_ESTATUTARIOS] [int] NOT NULL,
					[TOTAL_CELETISTAS] [int] NOT NULL,
					[TOTAL_COMISSIONADOS] [int] NOT NULL,
					[TOTAL_OUTROS_VINCULOS] [int] NOT NULL,
					[TOTAL_ESTAGIARIOS] [int] NOT NULL,
					[TOTAL_VOLUNTARIOS] [int] NOT NULL,
					[POSSUI_EQUIPE_PROTECAO_BASICA] [int] NOT NULL,
					[POSSUI_EQUIPE_PROTECAO_ESPECIAL] [int] NULL,
					[POSSUI_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL] [int] NULL,
					[POSSUI_EQUIPE_GESTAO_TRANSFERENCIA_RENDA] [int] NULL,
					[POSSUI_EQUIPE_CADUNICO] [int] NULL,
					[POSSUI_EQUIPE_GESTAO_FINANCEIRA] [int] NULL,
					[POSSUI_EQUIPE_GESTAO_SUAS] [int] NULL,
					[POSSUI_EQUIPE_REGULACAO_SUAS] [int] NULL,
					[POSSUI_EQUIPE_REDE_DIRETA] [int] NULL,
					[POSSUI_OUTRAS_EQUIPES] [int] NULL,
					[ID_SITUACAO] [int] NULL,
					[EXERCICIO] [int] NULL,
					[DESBLOQUEADO] [bit] NULL,
				 CONSTRAINT [PK_TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS] PRIMARY KEY CLUSTERED 
				(
					[ID] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
				) ON [PRIMARY] 
			END
		

		IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS_TB_ORGAO_GESTOR')		
			BEGIN
				ALTER TABLE [dbo].[TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS]  WITH CHECK 
				ADD CONSTRAINT [FK_TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS_TB_ORGAO_GESTOR] 
				FOREIGN KEY([ID_ORGAO_GESTOR])
				REFERENCES [dbo].[TB_ORGAO_GESTOR] ([ID])
			END
		
								
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS] TO usupmasreporting

		--###############################################################
		--#		INSERT
		--# DE: TB_ORGAO_GESTOR
		--# PARA: TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS)
		BEGIN
				EXEC('INSERT INTO [dbo].[TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS]
				   ([ID_ORGAO_GESTOR]
				   ,[TOTAL_SUPERIOR_SERVICO_SOCIAL]
				   ,[TOTAL_SUPERIOR_PSICOLOGIA]
				   ,[TOTAL_SUPERIOR_PEDAGOGIA]
				   ,[TOTAL_SUPERIOR_SOCIOLOGIA]
				   ,[TOTAL_SUPERIOR_DIREITO]
				   ,[TOTAL_SUPERIOR_ADMINISTRACAO]
				   ,[TOTAL_SUPERIOR_ANTROPOLOGIA]
				   ,[TOTAL_SUPERIOR_CONTABILIDADE]
				   ,[TOTAL_SUPERIOR_ECONOMIA]
				   ,[TOTAL_SUPERIOR_TERAPIA_OCUPACIONAL]
				   ,[TOTAL_SUPERIOR_ECONOMIA_DOMESTICA]
				   ,[TOTAL_ESTATUTARIOS]
				   ,[TOTAL_CELETISTAS]
				   ,[TOTAL_COMISSIONADOS]
				   ,[TOTAL_OUTROS_VINCULOS]
				   ,[TOTAL_ESTAGIARIOS]
				   ,[TOTAL_VOLUNTARIOS]
				   ,[POSSUI_EQUIPE_PROTECAO_BASICA]
				   ,[POSSUI_EQUIPE_PROTECAO_ESPECIAL]
				   ,[POSSUI_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL]
				   ,[POSSUI_EQUIPE_GESTAO_TRANSFERENCIA_RENDA]
				   ,[POSSUI_EQUIPE_CADUNICO]
				   ,[POSSUI_EQUIPE_GESTAO_FINANCEIRA]
				   ,[POSSUI_EQUIPE_GESTAO_SUAS]
				   ,[POSSUI_EQUIPE_REGULACAO_SUAS]
				   ,[POSSUI_EQUIPE_REDE_DIRETA]
				   ,[POSSUI_OUTRAS_EQUIPES]
				   ,[ID_SITUACAO]
				   ,[EXERCICIO]
				   ,[DESBLOQUEADO])
			 SELECT 
					 ID
				   , TOTAL_SUPERIOR_SERVICO_SOCIAL
				   , TOTAL_SUPERIOR_PSICOLOGIA
				   , TOTAL_SUPERIOR_PEDAGOGIA
				   , TOTAL_SUPERIOR_SOCIOLOGIA
				   , TOTAL_SUPERIOR_DIREITO
				   , TOTAL_SUPERIOR_ADMINISTRACAO
				   , TOTAL_SUPERIOR_ANTROPOLOGIA
				   , TOTAL_SUPERIOR_CONTABILIDADE
				   , TOTAL_SUPERIOR_ECONOMIA
				   , TOTAL_SUPERIOR_TERAPIA_OCUPACIONAL
				   , TOTAL_SUPERIOR_ECONOMIA_DOMESTICA
				   , TOTAL_ESTATUTARIOS
				   , TOTAL_CELETISTAS
				   , TOTAL_COMISSIONADOS
				   , TOTAL_OUTROS_VINCULOS
				   , TOTAL_ESTAGIARIOS
				   , TOTAL_VOLUNTARIOS
				   , POSSUI_EQUIPE_PROTECAO_BASICA
				   , POSSUI_EQUIPE_PROTECAO_ESPECIAL
				   , POSSUI_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL
				   , POSSUI_EQUIPE_GESTAO_TRANSFERENCIA_RENDA
				   , POSSUI_EQUIPE_CADUNICO
				   , POSSUI_EQUIPE_GESTAO_FINANCEIRA
				   , POSSUI_EQUIPE_GESTAO_SUAS
				   , POSSUI_EQUIPE_REGULACAO_SUAS
				   , POSSUI_EQUIPE_REDE_DIRETA
				   , POSSUI_OUTRAS_EQUIPES
				   , 1 as ID_SITUACAO
				   , 2018 as EXERCICIO
				   , 1 as DESBLOQUEADO
				   FROM TB_ORGAO_GESTOR')
		END
		PRINT '14.1 - OK'
		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_ORGAO_GESTOR_EQUIPE_ESPECIFICA_TOTAIS')
			BEGIN
				DECLARE @ConstraintName nvarchar(200)
						SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																					AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																					WHERE NAME = N'TOTAL_FUNCIONARIO' 
																					AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
						IF @ConstraintName IS NOT NULL
						BEGIN
							EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
						END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_FUNCIONARIO') IS NOT NULL)
				BEGIN
					 ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_FUNCIONARIO
				END
			----------------------------------------------------------------------------------------------------------------------------
						SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																					AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																					WHERE NAME = N'TOTAL_POS_GRADUACAO' 
																					AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
						IF @ConstraintName IS NOT NULL
						BEGIN
							EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
						END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_POS_GRADUACAO') IS NOT NULL)
				BEGIN
					 ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_POS_GRADUACAO
				END
	
			----------------------------------------------------------------------------------------------------------------------------
						SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																					AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																					WHERE NAME = N'TOTAL_SUPERIOR_SERVICO_SOCIAL' 
																					AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
						IF @ConstraintName IS NOT NULL
						BEGIN
							EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
						END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_SERVICO_SOCIAL') IS NOT NULL)
				BEGIN
					 ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_SERVICO_SOCIAL
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_PSICOLOGIA' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_PSICOLOGIA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_PSICOLOGIA
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_PEDAGOGIA' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_PEDAGOGIA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_PEDAGOGIA
				END
				PRINT '14.2 - OK'
			----------------------------------------------------------------------------------------------------------------------------
			SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_SOCIOLOGIA' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_SOCIOLOGIA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_SOCIOLOGIA
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_DIREITO' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_DIREITO') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_DIREITO
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_ADMINISTRACAO' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_ADMINISTRACAO') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_ADMINISTRACAO
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_ANTROPOLOGIA' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_ANTROPOLOGIA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_ANTROPOLOGIA
				END
				PRINT '14.3 - OK'
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_CONTABILIDADE' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_CONTABILIDADE') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_CONTABILIDADE
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_ECONOMIA' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_ECONOMIA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_ECONOMIA
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_TERAPIA_OCUPACIONAL' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_TERAPIA_OCUPACIONAL') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_TERAPIA_OCUPACIONAL
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_SUPERIOR_ECONOMIA_DOMESTICA' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_SUPERIOR_ECONOMIA_DOMESTICA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_SUPERIOR_ECONOMIA_DOMESTICA
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_ESTATUTARIOS' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_ESTATUTARIOS') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_ESTATUTARIOS
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_CELETISTAS' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_CELETISTAS') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_CELETISTAS
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_COMISSIONADOS' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_COMISSIONADOS') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_COMISSIONADOS
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_OUTROS_VINCULOS' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_OUTROS_VINCULOS') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_OUTROS_VINCULOS
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_ESTAGIARIOS' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_ESTAGIARIOS') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_ESTAGIARIOS
				END
			----------------------------------------------------------------------------------------------------------------------------
				SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
																	AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
																	WHERE NAME = N'TOTAL_VOLUNTARIOS' 
																		AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				IF @ConstraintName IS NOT NULL
				BEGIN
					EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'TOTAL_VOLUNTARIOS') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN TOTAL_VOLUNTARIOS
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_PROTECAO_BASICA' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_PROTECAO_BASICA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_PROTECAO_BASICA
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_PROTECAO_ESPECIAL' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_PROTECAO_ESPECIAL') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_PROTECAO_ESPECIAL
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_VIGILANCIA_SOCIOASSISTENCIAL
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_GESTAO_TRANSFERENCIA_RENDA' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_GESTAO_TRANSFERENCIA_RENDA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_GESTAO_TRANSFERENCIA_RENDA
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_CADUNICO' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_CADUNICO') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_CADUNICO
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_GESTAO_FINANCEIRA' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_GESTAO_FINANCEIRA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_GESTAO_FINANCEIRA
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_GESTAO_SUAS' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_GESTAO_SUAS') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_GESTAO_SUAS
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_REGULACAO_SUAS' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_REGULACAO_SUAS') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_REGULACAO_SUAS
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_EQUIPE_REDE_DIRETA' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_EQUIPE_REDE_DIRETA') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_EQUIPE_REDE_DIRETA
				END
			----------------------------------------------------------------------------------------------------------------------------
				--SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('TB_ORGAO_GESTOR') 
				--													AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns 
				--													WHERE NAME = N'POSSUI_OUTRAS_EQUIPES' 
				--														AND object_id = OBJECT_ID(N'TB_ORGAO_GESTOR'))
				--IF @ConstraintName IS NOT NULL
				--BEGIN
				--	EXEC('ALTER TABLE TB_ORGAO_GESTOR DROP CONSTRAINT ' + @ConstraintName)
				--END
				IF(COL_LENGTH('TB_ORGAO_GESTOR', 'POSSUI_OUTRAS_EQUIPES') IS NOT NULL)
				BEGIN
				   ALTER TABLE TB_ORGAO_GESTOR DROP COLUMN POSSUI_OUTRAS_EQUIPES
				END
			----------------------------------------------------------------------------------------------------------------------------

			END
		

		-- '15 - EQUIPES ESPECIFICAS TOTAIS'
		PRINT '15 - OK'

		IF(COL_LENGTH('TB_RECURSO', 'REF_BLOQUEIO') IS NULL)
			BEGIN
				ALTER TABLE TB_RECURSO ADD REF_BLOQUEIO [INT] IDENTITY(1,1) UNIQUE
			END
		 


		IF NOT EXISTS (SELECT 1 FROM sys.tables WHERE name = 'TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO')
		BEGIN 

			CREATE TABLE [dbo].TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO
			(
				  [ID_PREFEITURA] [int] NOT NULL
				, [EXERCICIO] [int] NOT NULL
				, [DESBLOQUEADO] [bit] NULL
				, [ID_REF_BLOQUEIO] [int] NOT NULL 
			 CONSTRAINT [UC_TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO] PRIMARY KEY CLUSTERED 
			(
				  [ID_PREFEITURA] ASC
				, [EXERCICIO]
				, [ID_REF_BLOQUEIO]
			)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 
			) 
		END
		IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO_TB_PREFEITURA')		
			BEGIN
				ALTER TABLE [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]  
				WITH CHECK ADD  CONSTRAINT [FK_TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO_TB_PREFEITURA] FOREIGN KEY([ID_PREFEITURA])
				REFERENCES [dbo].[TB_PREFEITURA] ([ID])
			END
		

		IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO_TB_REF_RECURSO')		
			BEGIN
				ALTER TABLE [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]  
				WITH CHECK ADD  CONSTRAINT [FK_TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO_TB_REF_RECURSO] FOREIGN KEY([ID_REF_BLOQUEIO])
				REFERENCES [dbo].[TB_RECURSO] ([REF_BLOQUEIO])
			END
		
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO] TO usupmasreporting


		IF EXISTS (SELECT 1 FROM sys.tables WHERE name = 'TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO')
		BEGIN
			--###############################
			-- FOrgaoGestor.aspx
			--###############################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 10)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 10 as ID_REF_BLOQUEIO --FOrgaoGestor.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 10)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 10 as ID_REF_BLOQUEIO -- FOrgaoGestor.aspx
				FROM TB_PREFEITURA PREF
			END
			--###############################
			-- FAtualizacaoDiagnostica.aspx
			--###############################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 75)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 75 as ID_REF_BLOQUEIO -- FAtualizacaoDiagnostica.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 75)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 75 as ID_REF_BLOQUEIO -- FAtualizacaoDiagnostica.aspx
				FROM TB_PREFEITURA PREF
			END

			--#############################################################################################
			--Rede direta 	BlocoIII/CUnidadesPublicas.aspx	- REF_BLOQUEIO 19
			--#############################################################################################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 19)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 19 as ID_REF_BLOQUEIO -- CUnidadesPublicas.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 19)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 19 as ID_REF_BLOQUEIO -- CUnidadesPublicas.aspx
				FROM TB_PREFEITURA PREF
			END

			--#############################################################################################
			--Rede indireta	BlocoIII/CUnidadesPrivadas.aspx	- REF_BLOQUEIO 20
			--#############################################################################################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 20)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 20 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 20)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 20 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END
			--#############################################################################################
			--Execução Financeira	BlocoV/FExecucaoFinanceira.aspx	76
			--#############################################################################################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 76)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 76 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 76)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 76 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

			--#############################################################################################
			--Proteção Social Básica FCronogramaDesembolso.aspx REF_BLOQUEIO 26
			--#############################################################################################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 26)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 26 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 26)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 26 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END


			--#############################################################################################
			--Proteção Social Especial de média complexidade FCronogramaDesembolso.aspx REF_BLOQUEIO 27
			--#############################################################################################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 27)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 27 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 27)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 27 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END


			--#############################################################################################
			--Proteção Social Especial de alta complexidade	FCronogramaDesembolso.aspx REF_BLOQUEIO 28
			--#############################################################################################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 28)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 28 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 28)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 28 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

			--#############################################################################################
			--Fonte Recursos Financiamento	BlocoV/FFonteFinanciamento.aspx	70
			--#############################################################################################
			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2018 AND ID_REF_BLOQUEIO = 70)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2018 as EXERCICIO
				, 0 as DESBLOQUEADO 
				, 70 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

			IF NOT EXISTS(SELECT 1 FROM TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO	WHERE EXERCICIO = 2019 AND ID_REF_BLOQUEIO = 70)
			BEGIN
				INSERT INTO [dbo].[TB_PREFEITURA_EXERCICIO_BLOQUEIO_DESBLOQUEIO]
						   ([ID_PREFEITURA]
						   ,[EXERCICIO]
						   ,[DESBLOQUEADO]
						   ,[ID_REF_BLOQUEIO])
				SELECT 
				PREF.ID as ID_PREFEITURA
				, 2019 as EXERCICIO
				, 1 as DESBLOQUEADO 
				, 70 as ID_REF_BLOQUEIO -- CUnidadesPrivadas.aspx
				FROM TB_PREFEITURA PREF
			END

		END
		


		IF NOT EXISTS (SELECT 1 FROM sys.tables WHERE name = 'TB_PREFEITURA_ATUALIZACAO_ANUAL')
		BEGIN 
			CREATE TABLE [dbo].[TB_PREFEITURA_ATUALIZACAO_ANUAL](
				[ID] [int] IDENTITY(1,1) NOT NULL,
				[ID_PREFEITURA] [int] NOT NULL,
				[ID_SITUACAO] [int] NOT NULL,

				[ATUALIZACAO_ANUAL] [varchar](max) NULL,
				[EXERCICIO] [int] NULL,

			 CONSTRAINT [PK_TB_PREFEITURA_ATUALIZACAO_ANUAL] PRIMARY KEY CLUSTERED 
			(
				[ID] ASC
			)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
			) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
		END
		
		IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_PREFEITURA_ATUALIZACAO_ANUAL_TB_SITUACAO')		
			BEGIN
				ALTER TABLE [dbo].[TB_PREFEITURA_ATUALIZACAO_ANUAL]  
				WITH CHECK ADD  CONSTRAINT [FK_TB_PREFEITURA_ATUALIZACAO_ANUAL_TB_SITUACAO] FOREIGN KEY([ID_SITUACAO])
				REFERENCES [dbo].[TB_SITUACAO] ([ID])
			END

			IF NOT EXISTS (SELECT 1 
					   FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
					   WHERE CONSTRAINT_NAME = N'FK_TB_PREFEITURA_ATUALIZACAO_ANUAL_TB_PREFEITURA')		
			BEGIN
				ALTER TABLE [dbo].[TB_PREFEITURA_ATUALIZACAO_ANUAL]  
				WITH CHECK ADD  CONSTRAINT [FK_TB_PREFEITURA_ATUALIZACAO_ANUAL_TB_PREFEITURA] FOREIGN KEY([ID_PREFEITURA])
				REFERENCES [dbo].[TB_PREFEITURA] ([ID])
			END
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_PREFEITURA_ATUALIZACAO_ANUAL] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_PREFEITURA_ATUALIZACAO_ANUAL] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_PREFEITURA_ATUALIZACAO_ANUAL] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_PREFEITURA_ATUALIZACAO_ANUAL] TO usupmasreporting


		IF(COL_LENGTH('TB_PREFEITURA', 'ATUALIZACAO_ANUAL_2018') IS NOT NULL)
		BEGIN
			ALTER TABLE TB_PREFEITURA DROP COLUMN ATUALIZACAO_ANUAL_2018
		END
		
		IF(COL_LENGTH('TB_PREFEITURA', 'ATUALIZACAO_ANUAL_2019') IS NOT NULL)
		BEGIN
			ALTER TABLE TB_PREFEITURA DROP COLUMN ATUALIZACAO_ANUAL_2019
		END
		

		IF(COL_LENGTH('TB_PREFEITURA', 'ATUALIZACAO_ANUAL_2020') IS NOT NULL)
		BEGIN
			ALTER TABLE TB_PREFEITURA DROP COLUMN ATUALIZACAO_ANUAL_2020
		END
		

		IF(COL_LENGTH('TB_PREFEITURA', 'ATUALIZACAO_ANUAL_2021') IS NOT NULL)
		BEGIN
			ALTER TABLE TB_PREFEITURA DROP COLUMN ATUALIZACAO_ANUAL_2021
		END
					
			
		-- '16 - PLANEJAMENTO DE BLOQUEIO E DESBLOQUEIO DE FUNDOS SEM HARDCODE '
		PRINT '16 - OK'


		IF(COL_LENGTH('TB_EXECUCAO_FINANCEIRA', 'EXERCICIO') IS NULL)
			BEGIN
				ALTER TABLE TB_EXECUCAO_FINANCEIRA ADD EXERCICIO [int] NOT NULL CONSTRAINT DF_TB_EXECUCAO_FINANCEIRA_EXERCICIO DEFAULT 2017 
				EXEC('UPDATE TB_EXECUCAO_FINANCEIRA SET EXERCICIO = 2017');
			END
		
		IF(COL_LENGTH('TB_EXECUCAO_FINANCEIRA', 'ID_SITUACAO') IS NULL)
			BEGIN
				ALTER TABLE TB_EXECUCAO_FINANCEIRA ADD ID_SITUACAO [int] NULL
				EXEC('UPDATE TB_EXECUCAO_FINANCEIRA SET ID_SITUACAO = 1');
			END
		
		IF(COL_LENGTH('TB_EXECUCAO_FINANCEIRA', 'DESBLOQUEADO') IS NULL)
			BEGIN
				ALTER TABLE TB_EXECUCAO_FINANCEIRA ADD DESBLOQUEADO [bit] NULL
				EXEC('UPDATE TB_EXECUCAO_FINANCEIRA SET DESBLOQUEADO = 1');
			END
		
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_EXECUCAO_FINANCEIRA_TB_SITUACAO')
			BEGIN
				ALTER TABLE [dbo].[TB_EXECUCAO_FINANCEIRA]  
				WITH CHECK ADD CONSTRAINT [FK_TB_EXECUCAO_FINANCEIRA_TB_SITUACAO] 
				FOREIGN KEY([ID_SITUACAO])
				REFERENCES [dbo].[TB_SITUACAO] ([ID])
			END
		
		IF(COL_LENGTH('TB_COMENTARIO_EXECUCAO_FINANCEIRA', 'EXERCICIO') IS NULL)
			BEGIN
				ALTER TABLE TB_COMENTARIO_EXECUCAO_FINANCEIRA ADD EXERCICIO [int] NOT NULL CONSTRAINT DF_TB_COMENTARIO_EXECUCAO_FINANCEIRA_EXERCICIO DEFAULT 2017 
				EXEC('UPDATE TB_COMENTARIO_EXECUCAO_FINANCEIRA SET EXERCICIO = 2017');
			END
		
		IF(COL_LENGTH('TB_COMENTARIO_EXECUCAO_FINANCEIRA', 'ID_SITUACAO') IS NULL)
			BEGIN
				ALTER TABLE TB_COMENTARIO_EXECUCAO_FINANCEIRA ADD ID_SITUACAO [int] NULL
				EXEC('UPDATE TB_COMENTARIO_EXECUCAO_FINANCEIRA SET ID_SITUACAO = 1');
			END
		
		IF(COL_LENGTH('TB_COMENTARIO_EXECUCAO_FINANCEIRA', 'DESBLOQUEADO') IS NULL)
			BEGIN
				ALTER TABLE TB_COMENTARIO_EXECUCAO_FINANCEIRA ADD DESBLOQUEADO [bit] NULL
				EXEC('UPDATE TB_COMENTARIO_EXECUCAO_FINANCEIRA SET DESBLOQUEADO = 1');
			END
		
		IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
						   WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' 
							 AND CONSTRAINT_NAME = N'PK_TB_COMENTARIO_EXECUCAO_FINANCEIRA'
							 AND TABLE_NAME = N'TB_COMENTARIO_EXECUCAO_FINANCEIRA')
			BEGIN
				ALTER TABLE TB_COMENTARIO_EXECUCAO_FINANCEIRA DROP CONSTRAINT PK_TB_COMENTARIO_EXECUCAO_FINANCEIRA
			END
		

		IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
						   WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' 
							 AND CONSTRAINT_NAME = N'PK_TB_COMENTARIO_EXECUCAO_FINANCEIRA'
							 AND TABLE_NAME = N'TB_COMENTARIO_EXECUCAO_FINANCEIRA')
			BEGIN
				ALTER TABLE TB_COMENTARIO_EXECUCAO_FINANCEIRA WITH CHECK 
				ADD CONSTRAINT [PK_TB_COMENTARIO_EXECUCAO_FINANCEIRA] PRIMARY KEY CLUSTERED 
				(
						[ID_PREFEITURA] ASC,
						EXERCICIO ASC
				)
			END
		

		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_COMENTARIO_EXECUCAO_FINANCEIRA_TB_SITUACAO')
			BEGIN
				ALTER TABLE [dbo].TB_COMENTARIO_EXECUCAO_FINANCEIRA  
				WITH CHECK ADD CONSTRAINT [FK_TB_COMENTARIO_EXECUCAO_FINANCEIRA_TB_SITUACAO] 
				FOREIGN KEY([ID_SITUACAO])
				REFERENCES [dbo].[TB_SITUACAO] ([ID])
			END



		IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
						   WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' 
							 AND CONSTRAINT_NAME = N'PK_TB_EXECUCAO_FINANCEIRA'
							 AND TABLE_NAME = N'TB_EXECUCAO_FINANCEIRA')
					BEGIN
						ALTER TABLE TB_EXECUCAO_FINANCEIRA DROP CONSTRAINT PK_TB_EXECUCAO_FINANCEIRA
					END

		IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' 
																		AND CONSTRAINT_NAME = N'PK_TB_EXECUCAO_FINANCEIRA'
																		AND TABLE_NAME = N'TB_EXECUCAO_FINANCEIRA')
			BEGIN
				ALTER TABLE TB_EXECUCAO_FINANCEIRA ADD CONSTRAINT 
					[PK_TB_EXECUCAO_FINANCEIRA] PRIMARY KEY CLUSTERED 
					(
						[ID_PREFEITURA] ASC,
						[ID_TIPO_PROTECAO] ASC,
						EXERCICIO ASC
					)
			END

		-- '17 - EXECUCACAO FINANCEIRAS MUDANCAS'	
		PRINT '17 - OK'

		IF NOT EXISTS(SELECT 1 FROM TB_MOTIVO_DESATIVACAO_SERVICO WHERE DESCRICAO = 'Encerramento das atividades do serviço' AND ID = 2)
		BEGIN
			UPDATE TB_MOTIVO_DESATIVACAO_SERVICO SET DESCRICAO = 'Encerramento das atividades do serviço' WHERE ID = 2
		END
		
		IF NOT EXISTS(SELECT 1 FROM TB_MOTIVO_DESATIVACAO_SERVICO WHERE DESCRICAO = 'O serviço continuará a ser ofertado com mudança de organização ou de local de execução deste serviço' AND ID = 3)
		BEGIN
			UPDATE TB_MOTIVO_DESATIVACAO_SERVICO SET DESCRICAO = 'O serviço continuará a ser ofertado com mudança de organização ou de local de execução deste serviço' WHERE ID = 3
		END
		

		-- '18 - MUDANCA DE LABEL TB_MOTIVO_DESATIVACAO_SERVICO'	
		PRINT '18 - OK'

		IF NOT EXISTS(SELECT 1 FROM TB_RECURSO WHERE NOME = 'Previsão de Cofinanciamento' AND ID_PAI = 6 AND ORDEM = 1)
		BEGIN
			UPDATE TB_RECURSO SET NOME = 'Previsão de Cofinanciamento' WHERE ID_PAI = 6 and ORDEM = 1
		END

		-- '19 - MUDANCA DE LABEL Previsão Orçamentário > Previsão de Cofinanciamento'	
		PRINT '19 - OK'

		--###############################################################
		--	CRIACAO TABELA:
		--		[TB_FUNDO_MUNICIPAL_VALORES]
		--
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_FUNDO_MUNICIPAL_VALORES')
			BEGIN
				CREATE TABLE [dbo].[TB_FUNDO_MUNICIPAL_VALORES](
					[ID_FUNDO_MUNICIPAL] [int] NOT NULL,
					[ID_PREFEITURA] [int] NOT NULL,
					[VALOR_FMAS] [money] NULL,
					[VALOR_FEAS] [money] NULL,
					[VALOR_FNAS] [money] NULL,
					[VALOR_CUSTEIO] [money] NULL,
					[EXERCICIO] [INT] NOT NULL,
				 CONSTRAINT [PK_TB_FUNDO_MUNICIPAL_VALORES] PRIMARY KEY CLUSTERED 
				(
					[ID_PREFEITURA] ASC
					, [EXERCICIO] ASC
				)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
				) ON [PRIMARY] 
			END
		
		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_FUNDO_MUNICIPAL_VALORES_ID_FUNDO_MUNICIPAL')		
			BEGIN
				ALTER TABLE [dbo].[TB_FUNDO_MUNICIPAL_VALORES]  WITH CHECK 
				ADD  CONSTRAINT [FK_TB_FUNDO_MUNICIPAL_VALORES_ID_FUNDO_MUNICIPAL] FOREIGN KEY([ID_FUNDO_MUNICIPAL])
				REFERENCES [dbo].[TB_FUNDO_MUNICIPAL] ([ID])
				ALTER TABLE [dbo].[TB_FUNDO_MUNICIPAL_VALORES] CHECK CONSTRAINT [FK_TB_FUNDO_MUNICIPAL_VALORES_ID_FUNDO_MUNICIPAL]
			END
		

		IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_TB_FUNDO_MUNICIPAL_VALORES_ID_PREFEITURA')		
			BEGIN
				ALTER TABLE [dbo].[TB_FUNDO_MUNICIPAL_VALORES]  WITH CHECK 
				ADD  CONSTRAINT [FK_TB_FUNDO_MUNICIPAL_VALORES_ID_PREFEITURA] FOREIGN KEY([ID_PREFEITURA])
				REFERENCES [dbo].[TB_PREFEITURA] ([ID])
				ALTER TABLE [dbo].[TB_FUNDO_MUNICIPAL_VALORES] CHECK CONSTRAINT [FK_TB_FUNDO_MUNICIPAL_VALORES_ID_PREFEITURA]
			END
		
		--###############################################################
		--#		GRANT
		--###############################################################
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_FUNDO_MUNICIPAL_VALORES] TO USERPMAS2009
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_FUNDO_MUNICIPAL_VALORES] TO SAPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_FUNDO_MUNICIPAL_VALORES] TO USERPROSOCIAL
		GRANT SELECT,UPDATE,INSERT,DELETE on [dbo].[TB_FUNDO_MUNICIPAL_VALORES] TO usupmasreporting

		--###############################################################
		--#		INSERT
		--# DE: TB_FUNDO_MUNICIPAL
		--# PARA: TB_FUNDO_MUNICIPAL_VALORES
		--###############################################################
		IF NOT EXISTS (SELECT 1 FROM [TB_FUNDO_MUNICIPAL_VALORES])
		BEGIN
			EXEC('INSERT INTO [TB_FUNDO_MUNICIPAL_VALORES]
				 ([ID_FUNDO_MUNICIPAL] 
				, [ID_PREFEITURA] 
				, [VALOR_FMAS] 
				, [VALOR_FEAS] 
				, [VALOR_FNAS] 
				, [VALOR_CUSTEIO] 
				, [EXERCICIO] )
				SELECT 
	   				  [ID] 
					, [ID_PREFEITURA] 
					, [VALOR_FMAS] 
					, [VALOR_FEAS] 
					, [VALOR_FNAS] 
					, [VALOR_CUSTEIO] 
					, 2018 as [EXERCICIO] 
				FROM [TB_FUNDO_MUNICIPAL]')
		END

		IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TB_FUNDO_MUNICIPAL_VALORES')
		BEGIN
			IF EXISTS (SELECT 1 FROM TB_FUNDO_MUNICIPAL_VALORES)
			BEGIN
				IF(COL_LENGTH('TB_FUNDO_MUNICIPAL', 'VALOR_FMAS') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_FUNDO_MUNICIPAL] DROP COLUMN [VALOR_FMAS] 
				END

				IF(COL_LENGTH('TB_FUNDO_MUNICIPAL', 'VALOR_FEAS') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_FUNDO_MUNICIPAL] DROP COLUMN [VALOR_FEAS] 
				END

				IF(COL_LENGTH('TB_FUNDO_MUNICIPAL', 'VALOR_FNAS') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_FUNDO_MUNICIPAL] DROP COLUMN [VALOR_FNAS] 
				END

				IF(COL_LENGTH('TB_FUNDO_MUNICIPAL', 'VALOR_CUSTEIO') IS NOT NULL)
				BEGIN
					ALTER TABLE [TB_FUNDO_MUNICIPAL] DROP COLUMN [VALOR_CUSTEIO] 
				END
			END
		END



		IF(COL_LENGTH('TB_INDICE_GESTAO_DESCENTRALIZADA', 'EXERCICIO') IS NULL)
			BEGIN
			IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
						   WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' 
							 AND CONSTRAINT_NAME = N'PK_TB_INDICE_GESTAO_DESCENTRALIZADA'
							 AND TABLE_NAME = N'TB_INDICE_GESTAO_DESCENTRALIZADA')
			BEGIN
				ALTER TABLE TB_INDICE_GESTAO_DESCENTRALIZADA DROP CONSTRAINT PK_TB_INDICE_GESTAO_DESCENTRALIZADA
			END

			ALTER TABLE TB_INDICE_GESTAO_DESCENTRALIZADA ADD EXERCICIO INT NOT NULL CONSTRAINT DF_TB_INDICE_GESTAO_DESCENTRALIZADA_EXERCICIO  DEFAULT(2018)

			IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
						   WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' 
							 AND CONSTRAINT_NAME = N'PK_TB_INDICE_GESTAO_DESCENTRALIZADA'
							 AND TABLE_NAME = N'TB_INDICE_GESTAO_DESCENTRALIZADA')
			BEGIN
				ALTER TABLE TB_INDICE_GESTAO_DESCENTRALIZADA ADD CONSTRAINT PK_TB_INDICE_GESTAO_DESCENTRALIZADA PRIMARY KEY CLUSTERED 
				(
						ID_PREFEITURA ASC,
						EXERCICIO ASC
				)
			END
		END


		-- '20 - FUNDO MUNICIPAL OK'
		PRINT '20 - OK'



		IF(COL_LENGTH('TB_PREFEITURA_ACAO_PLANEJAMENTO', 'EXERCICIO') IS NULL)
		BEGIN
			ALTER TABLE TB_PREFEITURA_ACAO_PLANEJAMENTO ADD EXERCICIO INT NOT NULL CONSTRAINT DF_TB_PREFEITURA_ACAO_PLANEJAMENTO_EXERCICIO  DEFAULT(2018)
		END

		-- '21 - TB_PREFEITURA_ACAO_PLANEJAMENTO OK'
		PRINT '21 - OK'

COMMIT
END TRY
BEGIN CATCH
  DECLARE @ErrorMessage NVARCHAR(4000);
    DECLARE @ErrorSeverity INT;
    DECLARE @ErrorState INT;

    SELECT 
        @ErrorMessage = ERROR_MESSAGE(),
        @ErrorSeverity = ERROR_SEVERITY(),
        @ErrorState = ERROR_STATE();

    RAISERROR (@ErrorMessage, -- Message text.
               @ErrorSeverity, -- Severity.
               @ErrorState -- State.

               );

    IF @@TRANCOUNT > 0
        ROLLBACK
		print 'Rollback...'
END CATCH